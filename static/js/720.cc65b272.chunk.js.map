{"version":3,"file":"static/js/720.cc65b272.chunk.js","mappings":"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","sources":["pages/references/styles.ts","pages/references/index.tsx","pages/header/styles.ts","utils/usePersistedState.ts","pages/header/index.tsx","services/data.ts"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const ReferencesStyles = styled.div`\r\n\r\n\r\n\r\n`;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Card, Row, Col, Container, Form, Button, Table } from 'react-bootstrap';\r\n\r\nimport { ReferencesStyles } from './styles';\r\nimport Header from '../header';\r\n\r\nimport Reference from '../../interfaces/References'; \r\n\r\nimport dataService from '../../services/data';\r\n\r\nexport default function References() {\r\n\r\n    const [references, setReferences] = useState<Reference[]>([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchReferences() {\r\n            try {\r\n                const response = await dataService().getReferences();\r\n                const data = await response.data;\r\n                setReferences(data);\r\n            } catch (error) {\r\n                console.error('Error fetching references:', error);\r\n            }\r\n        }\r\n        fetchReferences();\r\n    }, []);\r\n\r\n    return (\r\n        <ReferencesStyles>\r\n            <Header />\r\n            <main>\r\n                <Container fluid=\"md\" className='pt-5'>\r\n                    <Row>\r\n                        <Col sm={12} md={12} lg={12} className='pb-3'>\r\n                            <Card className='text-center'>\r\n                                <Card.Header>\r\n                                    <h2>Livros de Referências</h2>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Table  responsive=\"lg\" className=\"table table-striped table-bordered table-hover\"variant=\"dark\" size=\"lg\" >\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Capa</th>\r\n                                                <th className='text-wrap' style={{ width: '300px' }}>Título</th>\r\n                                                <th>Autor</th>\r\n                                                <th>Editora</th>\r\n                                                <th>Ano</th>\r\n                                                <th>Link</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {references.map((ref, index) => (\r\n                                                <tr key={`ref-${index + 1}`}>\r\n                                                    <td><img src={ref.cover} alt={ref.title} style={{ width: '100px' }} /></td>\r\n                                                    <td className='text-wrap'>{ref.title}</td>\r\n                                                    <td>{ref.authors.join(', ')}</td>\r\n                                                    <td>{ref.publisher}</td>\r\n                                                    <td>{ref.year}</td>\r\n                                                    <td><a href={ref.url} target=\"_blank\" rel=\"noopener noreferrer\">Comprar</a></td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n        </ReferencesStyles>\r\n    );\r\n}","import styled from 'styled-components';\r\n\r\nexport const Headers = styled.div`\r\n\r\n.navbar-brand {\r\ncolor: #fff;\r\n}\r\n`;","import { useState, useEffect, Dispatch, SetStateAction } from 'react';\r\n\r\ntype Response<T> = [\r\n  T,\r\n  Dispatch<SetStateAction<T>>,\r\n];\r\n\r\nfunction usePersistedState<T>(key: string): Response<T> {\r\n  const [state, setState] = useState(() => {\r\n    const storageValue = localStorage.getItem(key);    \r\n    if (storageValue) {\r\n      return JSON.parse(storageValue);\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n \r\n  return [state, setState];\r\n}\r\n\r\nexport default usePersistedState;","import React, { useState } from 'react';\r\nimport { Navbar, Container, Nav, Form, Button, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Headers } from './styles'\r\n\r\n\r\nimport usePeristedState from '../../utils/usePersistedState';\r\n\r\n\r\nexport default function Header(props: any) {\r\n\r\n    const [term, setTerm] = useState((props.term ?? ''));\r\n    const [user, setUser] = usePeristedState<any>('user');\r\n\r\n    return (\r\n        <Headers>\r\n            <header>\r\n                <Navbar  collapseOnSelect expand=\"lg\" bg=\"dark\"  variant=\"dark\" >\r\n                    <Container >\r\n                        <Navbar.Brand as={Link} to=\"/\">\r\n\r\n                            <Image\r\n                                alt=\"\"\r\n                                src={`${process.env.PUBLIC_URL}/logo.png`}\r\n                                width=\"30\"\r\n                                height=\"30\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />{' '}\r\n                            Grimório open source\r\n                        </Navbar.Brand>\r\n                        \r\n                        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                            <Nav className=\"me-auto\">\r\n                                <Nav.Link className=\"text-light\" as={Link} to=\"/\">Home</Nav.Link>\r\n                                <Nav.Link className=\"text-light\" as={Link} to=\"/maps\">Mapas</Nav.Link>\r\n                                <Nav.Link className=\"text-light\" as={Link} to=\"/references\">Referências</Nav.Link>\r\n                            </Nav>\r\n                            <Form className=\"d-flex\">\r\n                                <Form.Control\r\n                                    type=\"search\"\r\n                                    placeholder=\"Arcanos, Anjos, Sephira\"\r\n                                    className=\"me-2\"\r\n                                    aria-label=\"Arcanos, Anjos, Sephira\"\r\n                                />\r\n                                <Button variant=\"outline-success\">Pesquisar</Button>\r\n                            </Form>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </header>\r\n        </Headers>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport default function data() {\r\n\r\n\r\n    const base_url = (process.env.REACT_APP_BASE_URL ?? `${window.location.origin}`) + '/assets/';\r\n\r\n    const data = {\r\n\r\n        getAngels: function getAngels() {\r\n            return axios.get(`${base_url}angels.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getCaractere_hebraico: function getCaractere_hebraico() {\r\n            return axios.get(`${base_url}caractere_hebraico.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getOdus: function getOdus() {\r\n            return axios.get(`${base_url}odus.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getSephiroth: function getSephiroth() {\r\n            return axios.get(`${base_url}sephiroth.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getTarot: function getTarot() {\r\n            return axios.get(`${base_url}tarot.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getTarot_Arcana_Major: function getTarot_Arcana_Major() {\r\n            return axios.get(`${base_url}tarot_arcana_major.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n        getTarot_Arcana_Minor: function getTarot_Arcana_Minor() {\r\n            return axios.get(`${base_url}tarot_arcana_minor.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getSigns: function getSigns() {\r\n            return axios.get(`${base_url}signs.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getPlanet: function getPlanet() {\r\n            return axios.get(`${base_url}planets.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getMarkdown: function getMarkdown(link: string) {\r\n            return axios.get(`${base_url}markdowns/${link}`)\r\n        },\r\n\r\n        getReferences: function getReferences() {\r\n            return axios.get(`${base_url}references.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n\r\n\r\n    }\r\n\r\n    return data;\r\n}"],"names":["ReferencesStyles","styled","div","References","references","setReferences","useState","useEffect","async","response","dataService","getReferences","data","error","console","fetchReferences","_jsxs","children","_jsx","Header","Container","fluid","className","Row","Col","sm","md","lg","Card","Body","Table","responsive","variant","size","style","width","map","ref","index","src","cover","alt","title","authors","join","publisher","year","href","url","target","rel","Headers","key","state","setState","storageValue","localStorage","getItem","JSON","parse","setItem","stringify","props","_props$term","term","setTerm","user","setUser","usePeristedState","Navbar","collapseOnSelect","expand","bg","Brand","as","Link","to","Image","height","Toggle","Collapse","id","Nav","Form","Control","type","placeholder","Button","_process$env$REACT_AP","base_url","process","window","location","origin","getAngels","axios","get","headers","getCaractere_hebraico","getOdus","getSephiroth","getTarot","getTarot_Arcana_Major","getTarot_Arcana_Minor","getSigns","getPlanet","getMarkdown","link"],"sourceRoot":""}