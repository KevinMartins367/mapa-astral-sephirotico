{"version":3,"file":"static/js/279.71039519.chunk.js","mappings":"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","sources":["pages/home/styles.ts","components/infos/styles.ts","components/sephiroth/styles.ts","components/minor_arcana/styles.ts","components/caractere_hebraico/styles.ts","components/caractere_hebraico/index.tsx","components/minor_arcana/index.tsx","components/sephiroth/index.tsx","components/major_arcana/styles.ts","components/major_arcana/index.tsx","components/modal_combinations/styles.ts","components/modal_combinations/index.tsx","components/infos/index.tsx","components/kabbalah/index.tsx","pages/home/index.tsx","pages/header/styles.ts","utils/usePersistedState.ts","pages/header/index.tsx","services/data.ts"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Divs = styled.div`\r\n\r\nbackground-color: #000 !important;\r\ncolor: #fff !important;\r\n}\r\n\r\n.container-md{\r\n   max-width: 150rem !important;\r\n}\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Divs = styled.div`\r\n\r\n\r\na{\r\n   color: #ff9494;\r\n}\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Sephiras = styled.div`\r\n\r\nspan.simbolo{\r\n   font-size: 2.5rem;\r\n}\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Minor_arcanas = styled.div`\r\nspan.simbolo{\r\n   font-size: 4rem;\r\n}\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Caractere_hebraicos = styled.div`\r\n\r\n`;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nimport { Caractere_hebraicos } from './styles';\r\n\r\nimport data from '../../services/data';\r\n\r\nexport default function Caractere_hebraico(props: any) {\r\n\r\n    const [caractere, setCaractere]: any = useState('');\r\n\r\n    useEffect(() => {\r\n        async function Get_caractere() {\r\n            data().getCaractere_hebraico()\r\n                .then((result: any) => {\r\n                    return result.data;\r\n\r\n                })\r\n                .then((full_caractere: any) => {\r\n                    setCaractere(full_caractere[props.caractere])\r\n                })\r\n                .catch((error: any) => {\r\n                    console.log(\"🚀 ~ file: index.tsx:20 ~ Get_caractere ~ error:\", error)\r\n\r\n                })\r\n        }\r\n        if (props.caractere && props.caractere != '' && props.caractere != undefined) {\r\n            Get_caractere();\r\n        }\r\n    }, [props.caractere]);\r\n\r\n    return (\r\n        <Caractere_hebraicos>\r\n            <Card>\r\n                <Card.Header>\r\n                    <h2><span className='hebraic'>{caractere.caractere_hebraico}</span> {caractere.name ?? 'titulo de informações'}</h2>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <ul>\r\n                        <li>Significado: {caractere.significance} </li>\r\n                        <li>Valor: {caractere.value} </li>\r\n                        <li>Letra equivalente: {caractere.caractere_romane} </li>\r\n                        <li>Planeta:  {caractere.planeta} </li>\r\n                        <li>Correspondencia:  {caractere.correspondence} </li>\r\n                        <li>Qualidade Positiva: {caractere.positive_polarity} </li>\r\n                        <li>Qualidade Negativa: {caractere.negative_polarity} </li>\r\n                        <li>Pagina do Kabbalah Hermetica: {caractere.kabbalah_hermetica} pg </li>\r\n                        <li>Ritual: {caractere.exercise} </li>\r\n                    </ul>\r\n                </Card.Body>\r\n            </Card>\r\n        </Caractere_hebraicos>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Card, Row, Col, Image } from 'react-bootstrap';\r\n\r\nimport { Minor_arcanas } from './styles';\r\n\r\nimport data from '../../services/data';\r\n\r\nimport Caractere_hebraico from '../caractere_hebraico'\r\n\r\nexport default function Minor_arcana(props: any) {\r\n\r\n    const [arcana, setArcana]: any = useState('');\r\n\r\n    useEffect(() => {\r\n        async function Get_arcanas() {\r\n            data().getTarot_Arcana_Minor()\r\n                .then((result: any) => {\r\n                    return result.data;\r\n\r\n                })\r\n                .then((full_arcana: any) => {\r\n                    setArcana(full_arcana[props.arcana])\r\n                })\r\n                .catch((error: any) => {\r\n\r\n                }).finally(() => {\r\n\r\n                })\r\n        }\r\n        if (props.arcana && props.arcana != '') {\r\n            Get_arcanas();\r\n        }\r\n    }, [props.arcana]);\r\n\r\n\r\n    return (\r\n        <Minor_arcanas>\r\n            <Card>\r\n                <Card.Header>\r\n                    <Row>\r\n                        <Col sm={12} md={10} lg={10}>\r\n                            <h2 >{arcana.name ?? 'titulo de informações'}</h2>\r\n                        </Col>\r\n                        <Col sm={12} md={2} lg={2}>\r\n                            <button className='btn btn-primary' onClick={() => props.showModal(props.arcana, 'minor')}>Combinações</button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col sm={12} md={6} lg={6}>\r\n                            <ul>\r\n                                {((arcana.caractere_hebraico_link != ``) && (arcana.caractere_hebraico_link != undefined)) ?\r\n\r\n                                    <li>letra Hebraica:\r\n                                        <div>\r\n                                            { }\r\n                                            <Caractere_hebraico caractere={arcana.caractere_hebraico_link} />\r\n                                        </div>\r\n                                    </li>\r\n                                    : ``\r\n                                }\r\n                                <li>elemento: {arcana.elemento}</li>\r\n                                <li>Palavras chaves: {arcana.word_key}</li>\r\n\r\n                                {((arcana.dados != '') && (Array.isArray(arcana.dados)) && (arcana.dados.length > 0)) ?\r\n                                    <li>Dados: {arcana.dados.map((dados: any) => {\r\n\r\n                                        return <i className={`bi-dice-${dados}-fill me-3`} style={{ ...props.style, fontSize: `2rem`, display: `inline-block` }}></i>\r\n                                    })}</li> : ``\r\n                                }\r\n\r\n                                {\r\n                                    (arcana.arquetipo_MBTI != ``) ?\r\n                                        <li>Arquétipo MBTI: {arcana.arquetipo_MBTI}</li> : ''\r\n                                }\r\n\r\n                                {((arcana.name_angel != '') && (Array.isArray(arcana.name_angel)) && (arcana.name_angel.length > 0)) ?\r\n                                    <li>Nome de Anjos: {` `} {arcana.name_angel.map((angel: any) => {\r\n\r\n                                        return <a href={`/?angel_name=${angel}`} target=\"_blank\" className='me-3'>{angel}</a>\r\n                                    })}</li> : ``\r\n                                }\r\n                                {(arcana.astrologica != '') ?\r\n                                    <li>{(arcana.arquetipo_MBTI != ``) ? 'Intervalo Astral: ' : 'Face Planetaria: '}  {arcana.astrologica}</li> : ``\r\n                                }\r\n\r\n                                <li>Correspondente sephirotico: {` ` + arcana.sephiroth} </li>\r\n                                <li>Correspondente de reino: {` ` + arcana.reino} </li>\r\n                            </ul>\r\n                        </Col>\r\n                        <Col sm={12} md={6} lg={6}>\r\n                            <h2>Referencias</h2>\r\n\r\n                            <ul>\r\n                                <li><a href={arcana.link_wiki_mdd + ``} target=\"_blank\"> Wiki Projeto Mayhem</a></li>\r\n\r\n                                <li><a href={arcana.link_youtube_jornada_do_ser + ``} target=\"_blank\">Video Tarô Virtual</a></li>\r\n\r\n                                <li>Tarot Hermetico: {arcana.pages_tarot_hermetico} .pg</li>\r\n\r\n                                <li>Pagina do Tarot O Templo Vivente Frater Goya: {arcana.pages_tarot_crowley_goya} .pg</li>\r\n\r\n                                <li>Pagina do TARÔ DE CROWLEY - PALAVRAS-CHAVE: {arcana.pages_tarot_crowley_word_key} .pg</li>\r\n                            </ul>\r\n                        </Col>\r\n                        <Col className='m-3' sm={12} md={12} lg={12}>\r\n                            <h2>Síntese</h2>\r\n                            <p className='m-3'>{arcana.synthesis}</p>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <h3>Cartas</h3>\r\n                    <Row>\r\n                        <Col sm={12} md={12} lg={3}>\r\n\r\n                            <Image className='img-fluid pb-3' alt='arcano Rider Waite' src={`${process.env.PUBLIC_URL}/${arcana.image_rider_waite}`} />\r\n                            <p>arcano Rider Waite</p>\r\n                        </Col>\r\n                        <Col sm={12} md={12} lg={3}>\r\n                            <Image className='img-fluid pb-3' alt='arcano Crowley' src={`${process.env.PUBLIC_URL}/${arcana.image_crowley}`} />\r\n                            <p>arcano Crowley</p>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Minor_arcanas>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Accordion, Card, Image } from 'react-bootstrap';\r\n\r\nimport { Sephiras } from './styles';\r\n\r\nimport data from '../../services/data';\r\n\r\nimport Minor_arcana from '../minor_arcana';\r\n\r\nexport default function Sephiroth(props: any) {\r\n\r\n    const [sephira, setSephira]: any = useState('');\r\n\r\n    useEffect(() => {\r\n        async function Get_sephiroth() {\r\n            data().getSephiroth()\r\n                .then((result: any) => {\r\n                    return result.data;\r\n\r\n                })\r\n                .then((full_sephiroth: any) => {\r\n                    setSephira(full_sephiroth[props.sephira])\r\n                })\r\n                .catch((error: any) => {\r\n                    console.log(\"🚀 ~ file: index.tsx:20 ~ Get_sephiroth ~ error:\", error)\r\n\r\n                })\r\n        }\r\n        if (props.sephira == '' || props.sephira == undefined) {\r\n            return;\r\n        }\r\n        Get_sephiroth();\r\n    }, [props.sephira]);\r\n\r\n    return (\r\n        <Sephiras>\r\n            <Card>\r\n                <Card.Header>\r\n                    <h1>{sephira.name}</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <ul>\r\n                        <li>Planeta: {sephira.planeta} <span className='simbolo'>  {'   ' + sephira.simbolo}</span> </li>\r\n                        <li>Pagina do Kabbalah Hermetica: {sephira.pages_kabbalah_hermetica} pg</li>\r\n                        <li>Carruagem de acesso (persona na bíblia que tem uma conexão): {sephira.carruagem}</li>\r\n                        <li>Mundo: {sephira.mundo} ( tradução:  {sephira.mundo_traducao} )</li>\r\n                        <li>Casta (visão judaica): {sephira.casta_hebraica}</li>\r\n                        <li>Anjo (visão judaica): {sephira.angel_hebraica}</li>\r\n                        <li>Vogal hebraico: <span className='simbolo hebraic'> {sephira.vogal_hebraico} </span></li>\r\n                        <li>tetragrama com vogal (para meditação): <span className='simbolo hebraic'> {sephira.tetragrama_vogais} </span> </li>\r\n                        <li>Energia: {sephira.energia}</li>\r\n                        <li>dedos correspondentes: {sephira.dedos}</li>\r\n                    </ul>\r\n                    <h2>Referencias</h2>\r\n                    <ul>\r\n                        <li><a href={sephira.link_wiki_mdd} target=\"_blank\"> Wiki Projeto Mayhem</a></li>\r\n                        <li><a href={sephira.link_youtube_cdh} target=\"_blank\">Video CdH</a></li>\r\n                        <li><a href={sephira.link_youtube_yair} target=\"_blank\">Video Yair Alon</a></li>\r\n                    </ul>\r\n\r\n                    {((sephira.minor_arcana != '') && (Array.isArray(sephira.minor_arcana)) && (sephira.minor_arcana.length > 0)) ?\r\n                        <div>\r\n                            <Accordion>\r\n                                {\r\n                                    sephira.minor_arcana.map((arcana: any, index: number) => {\r\n\r\n                                        return <Accordion.Item eventKey={index + ''}>\r\n                                            <Accordion.Header>{arcana}</Accordion.Header>\r\n                                            <Accordion.Body>\r\n                                                <Minor_arcana arcana={arcana} showModal={props.showModal} />\r\n                                            </Accordion.Body>\r\n                                        </Accordion.Item>\r\n                                    })\r\n                                }\r\n                            </Accordion>\r\n                        </div> : ``\r\n                    }\r\n\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        </Sephiras>\r\n    )\r\n}","import styled from 'styled-components';\r\n\r\nexport const Major_arcanas = styled.div`\r\n\r\nspan.simbolo{\r\n    font-size: 2.5rem;\r\n }\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport { Card, Row, Col, Image } from 'react-bootstrap';\r\n\r\nimport { Major_arcanas } from './styles';\r\n\r\nimport Caractere_hebraico from '../caractere_hebraico'\r\nimport Markdown from 'react-markdown'\r\n\r\nimport data from '../../services/data';\r\n\r\nexport default function Major_arcana(props: any) {\r\n\r\n    const [arcana, setArcana]: any = useState('');\r\n    const [content, setContent] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        async function Get_arcanas() {\r\n            data().getTarot_Arcana_Major()\r\n                .then((result: any) => {\r\n                    return result.data;\r\n\r\n                })\r\n                .then((full_arcana: any) => {\r\n                    setArcana(full_arcana[props.arcana]);\r\n                })\r\n                .catch((error: any) => {\r\n                    console.log(\"🚀 ~ file: index.tsx:20 ~ Get_arcanas ~ error:\", error)\r\n\r\n                })\r\n        }\r\n        if (props.arcana && props.arcana != '') {\r\n            Get_arcanas();\r\n        }\r\n    }, [props.arcana]);\r\n\r\n    useEffect(() => {\r\n\r\n        async function getMarkdown() {\r\n            let link = arcana.interpretation;\r\n            if (link != undefined && link != ``) {\r\n                data().getMarkdown(link)\r\n                    .then(res => {\r\n\r\n                        setContent(res.data);\r\n                    })\r\n                    .catch((error: any) => {\r\n                        console.log(\"🚀 ~ file: index.tsx:20 ~ Get_arcanas ~ error:\", error)\r\n                    })\r\n            }\r\n        }\r\n        if (arcana != undefined && arcana != ``) {\r\n            getMarkdown();\r\n        }\r\n    }, [arcana]);\r\n\r\n\r\n    return (\r\n        <Major_arcanas>\r\n\r\n            <Card>\r\n                <Card.Header>\r\n                    <Row>\r\n                        <Col sm={12} md={10} lg={10}>\r\n                            <h2 >{arcana.name ?? 'titulo de informações'}</h2>\r\n                        </Col>\r\n                        <Col sm={12} md={2} lg={2}>\r\n                            <button className='btn btn-primary' onClick={() => props.showModal(props.arcana, 'major')}>Combinações</button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col sm={12} md={6} lg={6}>\r\n                            <ul>\r\n                                <li>Runa: <span className='simbolo hebraic'>{arcana.runa}</span></li>\r\n\r\n                                {arcana.elemento && arcana.elemento !== \"\" && (\r\n                                    <li>Elemento: {arcana.elemento}</li>\r\n                                )}\r\n                                {arcana.planeta && arcana.planeta !== \"\" && (\r\n                                    <li>Planeta: {arcana.planeta}</li>\r\n                                )}\r\n                                {arcana.signo && arcana.signo !== \"\" && (\r\n                                    <li>Signo: {arcana.signo}</li>\r\n                                )}\r\n                                <li>Cor (segundo Golden Dawn):  <div style={{ ...props.style, backgroundColor: arcana.color, width: `50px`, height: `20px`, display: `inline-block` }}>   </div> <span>{arcana.color}</span> </li>\r\n                                <li>Titulo Thelemita: {arcana.thelemita_title}</li>\r\n\r\n                                {((arcana.caractere_hebraico_link != ``) && (arcana.caractere_hebraico_link != undefined)) ?\r\n\r\n                                    <li>letra Hebraica:\r\n                                        <div>\r\n                                            { }\r\n                                            <Caractere_hebraico caractere={arcana.caractere_hebraico_link} />\r\n                                        </div>\r\n                                    </li>\r\n                                    : ``\r\n                                }\r\n                            </ul>\r\n\r\n                        </Col>\r\n                        <Col sm={12} md={6} lg={6}>\r\n                            <h2>Referencias</h2>\r\n                            <ul>\r\n                                <li><a href={arcana.link_wiki_mdd + ``} target=\"_blank\"> Wiki Projeto Mayhem</a></li>\r\n                                <li><a href={arcana.link_youtube_cdh + ``} target=\"_blank\">Video CdH</a></li>\r\n                                <li><a href={arcana.link_youtube_lupus + ``} target=\"_blank\">Video Lupus In Fabula</a></li>\r\n                                <li><a href={arcana.link_youtube_jornada_do_ser + ``} target=\"_blank\">Video Tarô Virtual</a></li>\r\n                                <li>Tarot Hermetico: {arcana.pages_tarot_hermetico} .pg</li>\r\n                                <li>Pagina do Tarot O Templo Vivente Frater Goya: {arcana.pages_tarot_crowley_goya} .pg</li>\r\n                                <li>Pagina do TARÔ DE CROWLEY - PALAVRAS-CHAVE: {arcana.pages_tarot_crowley_word_key} .pg</li>\r\n                            </ul>\r\n\r\n                        </Col>\r\n                        <Col className='m-3' sm={12} md={12} lg={12}>\r\n                            <h2>Síntese</h2>\r\n                            <p className='m-3'>{arcana.synthesis}</p>\r\n                        </Col>\r\n\r\n                        {\r\n                            (arcana.interpretation != undefined && arcana.interpretation != ``) ?\r\n                                <Col className='m-3' sm={12} md={12} lg={12}>\r\n                                    <h2>Interpretação</h2>\r\n                                        <div className='m-3'>\r\n                                            <Markdown \r\n                                                components={{\r\n                                                    h3: ({ node, ...props }) => {\r\n                                                        let text = '';\r\n                                                        if (typeof props.children === 'string') {\r\n                                                            text = props.children;\r\n                                                        } else if (Array.isArray(props.children)) {\r\n                                                            // Procura por <strong> e pega o texto dentro dela\r\n                                                            const strongChild = React.Children.toArray(props.children).find(\r\n                                                                (child: any) => React.isValidElement(child) && child.type === 'strong'\r\n                                                            );\r\n                                                            if (\r\n                                                                React.isValidElement(strongChild) &&\r\n                                                                typeof strongChild === 'object' &&\r\n                                                                strongChild !== null &&\r\n                                                                'props' in strongChild &&\r\n                                                                (strongChild as { props?: { children?: React.ReactNode } }).props &&\r\n                                                                (strongChild as { props: { children?: React.ReactNode } }).props.children\r\n                                                            ) {\r\n                                                                const strongChildContent = (strongChild as { props: { children: React.ReactNode } }).props.children;\r\n                                                                text = strongChildContent !== undefined ? String(strongChildContent) : '';\r\n                                                            } else {\r\n                                                                text = React.Children.toArray(props.children).join('');\r\n                                                            }\r\n                                                        }\r\n                                                        const id = arcana.name.toString()\r\n                                                            .normalize('NFD')\r\n                                                            .replace(/[\\u0300-\\u036f]/g, '')\r\n                                                            .replace(/[^a-zA-Z0-9\\s-]/g, '')\r\n                                                            .trim()\r\n                                                            .replace(/\\s+/g, '-')\r\n                                                            .toLowerCase()+ `-` + text\r\n                                                            .toString()\r\n                                                            .normalize('NFD')\r\n                                                            .replace(/[\\u0300-\\u036f]/g, '')\r\n                                                            .replace(/[^a-zA-Z0-9\\s-]/g, '')\r\n                                                            .trim()\r\n                                                            .replace(/\\s+/g, '-')\r\n                                                            .toLowerCase();\r\n                                                        \r\n                                                        return <h3 {...props} id={id} />;\r\n                                                    },\r\n                                                    \r\n                                                }}\r\n                                            >\r\n                                            {content ?? ''\r\n                                            }\r\n                                            </Markdown>\r\n                                        </div>\r\n\r\n                                </Col>\r\n                                : ``\r\n                        }\r\n                    </Row>\r\n                </Card.Body>\r\n\r\n                <Card.Footer>\r\n                    <h3>Cartas</h3>\r\n                    <Row>\r\n                        <Col sm={12} md={12} lg={3}>\r\n                            <Image className='img-fluid' alt='arcano Rider Waite' src={`${process.env.PUBLIC_URL}/${arcana.image_rider_waite}`} />\r\n                            <p>arcano Rider Waite</p>\r\n                        </Col>\r\n                        <Col sm={12} md={12} lg={3}>\r\n                            <Image className='img-fluid' alt='arcano Marselli' src={`${process.env.PUBLIC_URL}/${arcana.image_marseille}`} />\r\n                            <p>arcano Marselli</p>\r\n                        </Col>\r\n                        <Col sm={12} md={12} lg={3}>\r\n                            <Image className='img-fluid' alt='arcano Crowley' src={`${process.env.PUBLIC_URL}/${arcana.image_crowley}`} />\r\n                            <p>arcano Crowley</p>\r\n                        </Col>\r\n                        <Col sm={12} md={12} lg={3}>\r\n                            <Image className='img-fluid' alt='arcano CdH' src={`${process.env.PUBLIC_URL}/${arcana.image_cdh}`} />\r\n                            <p>arcano CdH </p>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Major_arcanas>\r\n    )\r\n                                                        \r\n}","import styled from 'styled-components';\r\n\r\nexport const Modal_combinations_Styles = styled.div`\r\n\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Table } from 'react-bootstrap';\r\n\r\n\r\nimport { Modal_combinations_Styles } from './styles';\r\n\r\nimport data from '../../services/data';\r\n\r\nexport default function Modal_combinations(props: any) {\r\n    const [combinations, setCombinations]: any = useState([]);\r\n    const [listMajorArcanas, setListMajorArcanas]: any = useState([]);\r\n    const [listMinorArcanas, setListMinorArcanas]: any = useState([]);\r\n    const [MajorArcanas, setMajorArcanas]: any = useState([]);\r\n    const [MinorArcanas, setMinorArcanas]: any = useState([]);\r\n    const [ arcanaSelectedIndex, setArcanaSelectedIndex ] = useState('');\r\n    const [ arcanaType, setArcanaType ] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        setArcanaSelectedIndex('');\r\n        setCombinations([]);\r\n        setMajorArcanas([]);\r\n        setMinorArcanas([]);\r\n        setListMajorArcanas([]);\r\n        setListMinorArcanas([]);\r\n        setArcanaType('');\r\n        \r\n        async function Get_MajorArcanas() {\r\n            const majorArcanas = await data().getTarot_Arcana_Major().then((result: any) => {\r\n                return result.data;\r\n            });\r\n            setListMajorArcanas(majorArcanas);\r\n        }\r\n\r\n        async function Get_MinorArcanas() {\r\n            const minorArcanas = await data().getTarot_Arcana_Minor().then((result: any) => {\r\n                return result.data;\r\n            });\r\n            setListMinorArcanas(minorArcanas);\r\n        }\r\n\r\n        Get_MajorArcanas();\r\n        Get_MinorArcanas();\r\n\r\n\r\n\r\n        if(props.arcana_type === 'major') {\r\n            const majorArcana = listMajorArcanas[props.arcana];\r\n            setMajorArcanas(majorArcana);\r\n            setCombinations(Object.entries(listMinorArcanas).map(([index, minorArcana]: [string, any]) => {\r\n                return {\r\n                    index,\r\n                    name: minorArcana.name,\r\n                };\r\n            }));\r\n            setArcanaType('minor');\r\n        } else if(props.arcana_type === 'minor') {\r\n            const minorArcana = listMinorArcanas[props.arcana];\r\n            setCombinations(Object.entries(listMajorArcanas).map(([index, majorArcana]: [string, any]) => {\r\n                return {\r\n                    index,\r\n                    name: majorArcana.name,\r\n                };\r\n            }));\r\n            setMinorArcanas(minorArcana);\r\n            setArcanaType('major');\r\n        }\r\n    }, [props.arcana]);\r\n\r\n    useEffect(() => {\r\n        if (arcanaSelectedIndex !== '') {\r\n            if( arcanaType === 'major') {\r\n                const selectedArcana = listMajorArcanas[arcanaSelectedIndex];\r\n                setMajorArcanas(selectedArcana);\r\n            } else if( arcanaType === 'minor') {\r\n                const selectedArcana = listMinorArcanas[arcanaSelectedIndex];\r\n                setMinorArcanas(selectedArcana);\r\n            }\r\n        }\r\n    }, [arcanaSelectedIndex]);\r\n\r\n    return (\r\n        <Modal_combinations_Styles>\r\n            <Modal show={props.show} size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered onHide={props.onHide}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Combinações de {props.arcana}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"select-container\">\r\n                        <label htmlFor=\"combination-select\">Escolha uma combinação:</label>\r\n                        <select className=\"form-select form-select-lg mb-3\" id=\"combination-select\" onChange={(e) => {\r\n                            const selectedIndex = e.target.value;\r\n                            setArcanaSelectedIndex(selectedIndex);\r\n                        }}>\r\n                            {combinations.map((combination: any) => (\r\n                                <option key={combination.index} value={combination.index}>\r\n                                    {combination.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    {arcanaSelectedIndex && (\r\n                        <>\r\n                            <h3>Combinação Selecionada:</h3>\r\n                            <Table responsive=\"lg\" striped bordered hover variant=\"dark\" size=\"lg\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>-</th>\r\n                                        <th>O que?</th>\r\n                                        <th>Como?</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Nome:</td>\r\n                                        <td>{MinorArcanas.name}</td>\r\n                                        <td>{MajorArcanas.name}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Síntese:</td>\r\n                                        <td>{MinorArcanas.synthesis}</td>\r\n                                        <td>{MajorArcanas.synthesis}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </>\r\n                    )}\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Modal_combinations_Styles>\r\n    );\r\n}","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nimport { Divs } from './styles';\r\n\r\nimport Sephiroth from '../sephiroth'\r\nimport Major_arcana from '../major_arcana';\r\nimport Modal_combinations from '../modal_combinations';\r\n\r\nexport default function Infos(props: any) {\r\n    const { sephira, path } = props;\r\n\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const [selectedArcana, setSelectedArcana] = React.useState('');\r\n    const [arcanaType, setArcanaType] = React.useState('');\r\n\r\n    const handleShowModal = (arcana: string, type: string) => {\r\n        setSelectedArcana(arcana);\r\n        setArcanaType(type);\r\n        setShowModal(true);\r\n    };\r\n\r\n    let content;\r\n\r\n    if (path && path !== '') {\r\n        content = (\r\n            <Major_arcana arcana={path} showModal={handleShowModal} />\r\n        );\r\n\r\n    } else if (sephira && sephira !== '') {\r\n        content = (\r\n            <Sephiroth sephira={sephira} showModal={handleShowModal} />\r\n        );\r\n    } else {\r\n        content = (\r\n            <Card className=\"text-center\">\r\n                <Card.Body>\r\n                    <Card.Text className='text-center p-5'>\r\n                        Este é um projeto de código aberto para o Grimorio, uma ferramenta para consulta de dados da kabbalah, tarot e astrologia. O projeto é mantido por <a href='https://www.linkedin.com/in/kevin-martins-010532119/'>Kevin Martins</a>  , caso queira contribuir, entre em contato. Lembrando que o projeto é gratuito e não possui fins lucrativos, portanto, não é permitido o uso comercial. O projeto é um trabalho em andamento e pode conter erros. Caso encontre algum erro, por favor, entre em contato para que possamos corrigir, porém nem todas as sugestões serão aceitas, por varios motivos. \r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Divs>\r\n            {content}\r\n            <Modal_combinations\r\n                show={showModal}\r\n                onHide={() => setShowModal(false)}\r\n                arcana={selectedArcana}\r\n                arcana_type={arcanaType}\r\n            />\r\n        </Divs>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\n\r\ninterface KabbalahProps {\r\n    onSephiraChange: (sephira: string) => void;\r\n    handlePathChange: (path: string) => void;\r\n}\r\n\r\nexport default function Kabbalah({ onSephiraChange, handlePathChange }: KabbalahProps) {\r\n\r\n\r\n    const groupSephiroth: Record<string, string> = {\r\n        malkut: \"malkuth\",\r\n        yesod: \"yesod\",\r\n        hod: \"hod\",\r\n        netzach: \"netzach\",\r\n        tipheret: \"tipheret\",\r\n        geburah: \"geburah\",\r\n        chesed: \"chesed\",\r\n        binah: \"binah\",\r\n        chokmah: \"chokmah\",\r\n        kether: \"kether\",\r\n        daath: \"daath\",\r\n    };\r\n\r\n    const groupPath: Record<string, string> = {\r\n        caminho_0: \"louco\",\r\n        caminho_1: \"mago\",\r\n        caminho_2: \"sacerdotisa\",\r\n        caminho_3: \"imperatriz\",\r\n        caminho_4: \"imperador\",\r\n        caminho_5: \"hierofante\",\r\n        caminho_6: \"enamorados\",\r\n        caminho_7: \"carro\",\r\n        caminho_8: \"forca\",\r\n        caminho_9: \"eremita\",\r\n        caminho_10: \"roda\",\r\n        caminho_11: \"justica\",\r\n        caminho_12: \"pendurado\",\r\n        caminho_13: \"morte\",\r\n        caminho_14: \"temperanca\",\r\n        caminho_15: \"diabo\",\r\n        caminho_16: \"torre\",\r\n        caminho_17: \"estrela\",\r\n        caminho_18: \"lua\",\r\n        caminho_19: \"sol\",\r\n        caminho_20: \"julgamento\",\r\n        caminho_21: \"mundo\",\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleGroupClick = (event: MouseEvent) => {\r\n            const target = event.target as SVGElement;\r\n            const groupId = target.id;\r\n            if (!groupId) return;\r\n\r\n            let newSephira = groupSephiroth[groupId];\r\n            if (!newSephira) {\r\n                for (const [key, value] of Object.entries(groupSephiroth)) {\r\n                    const suffix = key;\r\n                    if (suffix && groupId.endsWith(`${suffix}`)) {\r\n                        newSephira = value;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (newSephira) {\r\n                handlePathChange('');\r\n                onSephiraChange(newSephira);\r\n            }\r\n\r\n            let newPath = groupPath[groupId];\r\n            if (!newPath) {\r\n                for (const [key, value] of Object.entries(groupPath)) {\r\n                    const suffix = key;\r\n                    if (suffix && groupId.endsWith(`${suffix}`)) {\r\n                        newPath = value;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (newPath) {\r\n                onSephiraChange('');\r\n                handlePathChange(newPath);\r\n            }\r\n        };\r\n\r\n        // Se o SVG carregado internamente pelo object permitir, você pode buscar seu conteúdo\r\n        const objectElement = document.getElementById('kabbalah-svg-object');\r\n        objectElement?.addEventListener('load', () => {\r\n            const svgDoc = (objectElement as HTMLObjectElement).contentDocument;\r\n            if (svgDoc) {\r\n                svgDoc.addEventListener('click', handleGroupClick);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            const objectEl = document.getElementById('kabbalah-svg-object');\r\n            const svgDoc = (objectEl as HTMLObjectElement)?.contentDocument;\r\n            svgDoc?.removeEventListener('click', handleGroupClick);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <object\r\n            id=\"kabbalah-svg-object\"\r\n            data={`${process.env.PUBLIC_URL}/assets/images/kabbalah.svg`}\r\n            type=\"image/svg+xml\" \r\n            width=\"100%\"\r\n            height=\"100%\"\r\n        >\r\n            Seu navegador não suporta SVG\r\n        </object>\r\n    );\r\n}","import React from 'react';\r\nimport { Card, Col, Container, Row } from 'react-bootstrap';\r\n\r\nimport { Divs } from './styles';\r\n\r\nimport Infos from '../../components/infos';\r\nimport Kabbalah from '../../components/kabbalah';\r\nimport Header from '../header';\r\n\r\nexport default function Home() {\r\n    const [sephira, setSephira] = React.useState('');\r\n    const [path, setPath] = React.useState('');\r\n\r\n    const handleSephiraChange = (newSephira: string) => {\r\n        setSephira(newSephira);\r\n    };\r\n\r\n    const handlePathChange = (newPath: string) => {\r\n        setPath(newPath);\r\n    };\r\n\r\n    return (\r\n        <Divs>\r\n            <Header />\r\n            <main>\r\n                <Container fluid=\"md\" className='pt-5'>\r\n                    <Row>\r\n                        {/* <Col className='pb-3' sm={12} md={12} lg={12}>\r\n                     <Form_infos />\r\n                  </Col> */}\r\n\r\n                        <Col sm={12} md={12} lg={3} className='pb-3'>\r\n                            <aside>\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <Kabbalah onSephiraChange={handleSephiraChange} handlePathChange={handlePathChange} />\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </aside>\r\n                        </Col>\r\n\r\n                        <Col sm={12} md={12} lg={9} className='pb-3'>\r\n                            <section>\r\n                                <Infos sephira={sephira} path={path} />\r\n                            </section>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n        </Divs>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Headers = styled.div`\r\n\r\n.navbar-brand {\r\ncolor: #fff;\r\n}\r\n`;","import { useState, useEffect, Dispatch, SetStateAction } from 'react';\r\n\r\ntype Response<T> = [\r\n  T,\r\n  Dispatch<SetStateAction<T>>,\r\n];\r\n\r\nfunction usePersistedState<T>(key: string): Response<T> {\r\n  const [state, setState] = useState(() => {\r\n    const storageValue = localStorage.getItem(key);    \r\n    if (storageValue) {\r\n      return JSON.parse(storageValue);\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n \r\n  return [state, setState];\r\n}\r\n\r\nexport default usePersistedState;","import React, { useState } from 'react';\r\nimport { Navbar, Container, Nav, Form, Button, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Headers } from './styles'\r\n\r\n\r\nimport usePeristedState from '../../utils/usePersistedState';\r\n\r\n\r\nexport default function Header(props: any) {\r\n\r\n    const [term, setTerm] = useState((props.term ?? ''));\r\n    const [user, setUser] = usePeristedState<any>('user');\r\n\r\n    return (\r\n        <Headers>\r\n            <header>\r\n                <Navbar  collapseOnSelect expand=\"lg\" bg=\"dark\"  variant=\"dark\" >\r\n                    <Container >\r\n                        <Navbar.Brand as={Link} to=\"/\">\r\n\r\n                            <Image\r\n                                alt=\"\"\r\n                                src={`${process.env.PUBLIC_URL}/logo.png`}\r\n                                width=\"30\"\r\n                                height=\"30\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />{' '}\r\n                            Grimório open source\r\n                        </Navbar.Brand>\r\n                        \r\n                        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                            <Nav className=\"me-auto\">\r\n                                <Nav.Link className=\"text-light\" as={Link} to=\"/\">Home</Nav.Link>\r\n                                <Nav.Link className=\"text-light\" as={Link} to=\"/maps\">Mapas</Nav.Link>\r\n                                <Nav.Link className=\"text-light\" as={Link} to=\"/references\">Referências</Nav.Link>\r\n                            </Nav>\r\n                            <Form className=\"d-flex\">\r\n                                <Form.Control\r\n                                    type=\"search\"\r\n                                    placeholder=\"Arcanos, Anjos, Sephira\"\r\n                                    className=\"me-2\"\r\n                                    aria-label=\"Arcanos, Anjos, Sephira\"\r\n                                />\r\n                                <Button variant=\"outline-success\">Pesquisar</Button>\r\n                            </Form>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </header>\r\n        </Headers>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport default function data() {\r\n\r\n\r\n    const base_url = (process.env.REACT_APP_BASE_URL ?? `${window.location.origin}`) + '/assets/';\r\n\r\n    const data = {\r\n\r\n        getAngels: function getAngels() {\r\n            return axios.get(`${base_url}angels.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getCaractere_hebraico: function getCaractere_hebraico() {\r\n            return axios.get(`${base_url}caractere_hebraico.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getOdus: function getOdus() {\r\n            return axios.get(`${base_url}odus.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getSephiroth: function getSephiroth() {\r\n            return axios.get(`${base_url}sephiroth.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getTarot: function getTarot() {\r\n            return axios.get(`${base_url}tarot.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getTarot_Arcana_Major: function getTarot_Arcana_Major() {\r\n            return axios.get(`${base_url}tarot_arcana_major.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n        getTarot_Arcana_Minor: function getTarot_Arcana_Minor() {\r\n            return axios.get(`${base_url}tarot_arcana_minor.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getSigns: function getSigns() {\r\n            return axios.get(`${base_url}signs.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getPlanet: function getPlanet() {\r\n            return axios.get(`${base_url}planets.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getMarkdown: function getMarkdown(link: string) {\r\n            return axios.get(`${base_url}markdowns/${link}`)\r\n        },\r\n\r\n        getReferences: function getReferences() {\r\n            return axios.get(`${base_url}references.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n\r\n\r\n    }\r\n\r\n    return data;\r\n}"],"names":["Divs","styled","div","Sephiras","Minor_arcanas","Caractere_hebraicos","Caractere_hebraico","props","_caractere$name","caractere","setCaractere","useState","useEffect","undefined","async","data","getCaractere_hebraico","then","result","full_caractere","catch","error","console","log","Get_caractere","_jsx","children","_jsxs","Card","Header","className","caractere_hebraico","name","Body","significance","value","caractere_romane","planeta","correspondence","positive_polarity","negative_polarity","kabbalah_hermetica","exercise","Minor_arcana","_arcana$name","arcana","setArcana","getTarot_Arcana_Minor","full_arcana","finally","Get_arcanas","Row","Col","sm","md","lg","onClick","showModal","caractere_hebraico_link","elemento","word_key","dados","Array","isArray","length","map","style","fontSize","display","arquetipo_MBTI","name_angel","angel","href","target","astrologica","sephiroth","reino","link_wiki_mdd","link_youtube_jornada_do_ser","pages_tarot_hermetico","pages_tarot_crowley_goya","pages_tarot_crowley_word_key","synthesis","Footer","Image","alt","src","image_rider_waite","image_crowley","Sephiroth","sephira","setSephira","getSephiroth","full_sephiroth","Get_sephiroth","simbolo","pages_kabbalah_hermetica","carruagem","mundo","mundo_traducao","casta_hebraica","angel_hebraica","vogal_hebraico","tetragrama_vogais","energia","dedos","link_youtube_cdh","link_youtube_yair","minor_arcana","Accordion","index","Item","eventKey","Major_arcanas","Major_arcana","content","setContent","getTarot_Arcana_Major","link","interpretation","getMarkdown","res","runa","signo","backgroundColor","color","width","height","thelemita_title","link_youtube_lupus","Markdown","components","h3","_ref","node","text","strongChild","React","toArray","find","child","type","strongChildContent","String","join","id","toString","normalize","replace","trim","toLowerCase","image_marseille","image_cdh","Modal_combinations_Styles","Modal_combinations","combinations","setCombinations","listMajorArcanas","setListMajorArcanas","listMinorArcanas","setListMinorArcanas","MajorArcanas","setMajorArcanas","MinorArcanas","setMinorArcanas","arcanaSelectedIndex","setArcanaSelectedIndex","arcanaType","setArcanaType","majorArcanas","Get_MajorArcanas","minorArcanas","Get_MinorArcanas","arcana_type","majorArcana","Object","entries","minorArcana","_ref2","selectedArcana","Modal","show","size","centered","onHide","closeButton","Title","htmlFor","onChange","e","selectedIndex","combination","_Fragment","Table","responsive","striped","bordered","hover","variant","Infos","path","setShowModal","setSelectedArcana","handleShowModal","Text","Kabbalah","onSephiraChange","handlePathChange","groupSephiroth","malkut","yesod","hod","netzach","tipheret","geburah","chesed","binah","chokmah","kether","daath","groupPath","caminho_0","caminho_1","caminho_2","caminho_3","caminho_4","caminho_5","caminho_6","caminho_7","caminho_8","caminho_9","caminho_10","caminho_11","caminho_12","caminho_13","caminho_14","caminho_15","caminho_16","caminho_17","caminho_18","caminho_19","caminho_20","caminho_21","handleGroupClick","event","groupId","newSephira","key","suffix","endsWith","newPath","objectElement","document","getElementById","addEventListener","svgDoc","contentDocument","objectEl","removeEventListener","Home","setPath","Container","fluid","Headers","state","setState","storageValue","localStorage","getItem","JSON","parse","setItem","stringify","_props$term","term","setTerm","user","setUser","usePeristedState","Navbar","collapseOnSelect","expand","bg","Brand","as","Link","to","Toggle","Collapse","Nav","Form","Control","placeholder","Button","_process$env$REACT_AP","base_url","process","window","location","origin","getAngels","axios","get","headers","getOdus","getTarot","getSigns","getPlanet","getReferences"],"sourceRoot":""}