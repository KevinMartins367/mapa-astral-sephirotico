{"version":3,"file":"static/js/96.834e45d5.chunk.js","mappings":"qNAEO,MAAMA,E,QAAUC,GAAOC,GAAG;;;;;ECsBjC,QAjBA,SAA8BC,GAC5B,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,WAAS,KACjC,MAAMC,EAAeC,aAAaC,QAAQN,GAC1C,OAAII,EACKG,KAAKC,MAAMJ,GAEX,IACT,IAOF,OAJAK,EAAAA,EAAAA,YAAU,KACRJ,aAAaK,QAAQV,EAAKO,KAAKI,UAAUV,GAAO,GAC/C,CAACD,EAAKC,IAEF,CAACA,EAAOC,EACjB,E,aCZe,SAASU,EAAOC,GAAa,IAADC,EAEvC,MAAOC,EAAMC,IAAWb,EAAAA,EAAAA,UAAoB,QAAZW,EAAED,EAAME,YAAI,IAAAD,EAAAA,EAAI,KACzCG,EAAMC,GAAWC,EAAsB,QAE9C,OACIC,EAAAA,EAAAA,KAACvB,EAAO,CAAAwB,UACJD,EAAAA,EAAAA,KAAA,UAAAC,UACID,EAAAA,EAAAA,KAACE,EAAAA,EAAM,CAAEC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAQC,QAAQ,OAAML,UAC3DM,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAAAP,SAAA,EACNM,EAAAA,EAAAA,MAACL,EAAAA,EAAOO,MAAK,CAACC,GAAIC,EAAAA,GAAMC,GAAG,IAAGX,SAAA,EAE1BD,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CACFC,IAAI,GACJC,IAAK,oCACLC,MAAM,KACNC,OAAO,KACPC,UAAU,6BACX,IAAI,8BAIXlB,EAAAA,EAAAA,KAACE,EAAAA,EAAOiB,OAAM,CAAC,gBAAc,2BAC7BZ,EAAAA,EAAAA,MAACL,EAAAA,EAAOkB,SAAQ,CAACC,GAAG,wBAAuBpB,SAAA,EACvCM,EAAAA,EAAAA,MAACe,EAAAA,EAAG,CAACJ,UAAU,UAASjB,SAAA,EACpBD,EAAAA,EAAAA,KAACsB,EAAAA,EAAIX,KAAI,CAACO,UAAU,aAAaR,GAAIC,EAAAA,GAAMC,GAAG,IAAGX,SAAC,UAClDD,EAAAA,EAAAA,KAACsB,EAAAA,EAAIX,KAAI,CAACO,UAAU,aAAaR,GAAIC,EAAAA,GAAMC,GAAG,QAAOX,SAAC,WACtDD,EAAAA,EAAAA,KAACsB,EAAAA,EAAIX,KAAI,CAACO,UAAU,aAAaR,GAAIC,EAAAA,GAAMC,GAAG,cAAaX,SAAC,uBAEhEM,EAAAA,EAAAA,MAACgB,EAAAA,EAAI,CAACL,UAAU,SAAQjB,SAAA,EACpBD,EAAAA,EAAAA,KAACuB,EAAAA,EAAKC,QAAO,CACTC,KAAK,SACLC,YAAY,0BACZR,UAAU,OACV,aAAW,6BAEflB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACrB,QAAQ,kBAAiBL,SAAC,4BAQlE,C,gDCpDe,SAAS2B,IAAQ,IAADC,EAG3B,MAAMC,GAA0C,QAA/BD,EAACE,8DAA8BF,EAAI,GAAGG,OAAOC,SAASC,UAAY,WAqGnF,MAnGa,CAETC,UAAW,WACP,OAAOC,EAAAA,EAAMC,IAAI,GAAGP,eAAuB,CACvCQ,QAAS,CACL,8BAA+B,IAC/B,eAAgB,mCAG5B,EAEAC,sBAAuB,WACnB,OAAOH,EAAAA,EAAMC,IAAI,GAAGP,2BAAmC,CACnDQ,QAAS,CACL,8BAA+B,IAC/B,eAAgB,mCAG5B,EAEAE,QAAS,WACL,OAAOJ,EAAAA,EAAMC,IAAI,GAAGP,aAAqB,CACrCQ,QAAS,CACL,8BAA+B,IAC/B,eAAgB,mCAG5B,EAEAG,aAAc,WACV,OAAOL,EAAAA,EAAMC,IAAI,GAAGP,kBAA0B,CAC1CQ,QAAS,CACL,8BAA+B,IAC/B,eAAgB,mCAG5B,EAEAI,SAAU,WACN,OAAON,EAAAA,EAAMC,IAAI,GAAGP,cAAsB,CACtCQ,QAAS,CACL,8BAA+B,IAC/B,eAAgB,mCAG5B,EAEAK,sBAAuB,WACnB,OAAOP,EAAAA,EAAMC,IAAI,GAAGP,2BAAmC,CACnDQ,QAAS,CACL,8BAA+B,IAC/B,eAAgB,mCAG5B,EACAM,sBAAuB,WACnB,OAAOR,EAAAA,EAAMC,IAAI,GAAGP,2BAAmC,CACnDQ,QAAS,CACL,8BAA+B,IAC/B,eAAgB,mCAG5B,EAEAO,SAAU,WACN,OAAOT,EAAAA,EAAMC,IAAI,GAAGP,cAAsB,CACtCQ,QAAS,CACL,8BAA+B,IAC/B,eAAgB,mCAG5B,EAEAQ,UAAW,WACP,OAAOV,EAAAA,EAAMC,IAAI,GAAGP,gBAAwB,CACxCQ,QAAS,CACL,8BAA+B,IAC/B,eAAgB,mCAG5B,EAEAS,YAAa,SAAqBC,GAC9B,OAAOZ,EAAAA,EAAMC,IAAI,GAAGP,cAAqBkB,IAC7C,EAEAC,cAAe,WACX,OAAOb,EAAAA,EAAMC,IAAI,GAAGP,mBAA2B,CAC3CQ,QAAS,CACL,8BAA+B,IAC/B,eAAgB,mCAG5B,EAOR,C,+GCzGO,MAAMY,EAAOxE,EAAAA,GAAOC,GAAG;;;;;;;;;ECAjBuE,EAAOxE,EAAAA,GAAOC,GAAG;;;;;;eCAvB,MAAMwE,EAAWzE,EAAAA,GAAOC,GAAG;;;;;0BCA3B,MAAMyE,EAAgB1E,EAAAA,GAAOC,GAAG;;;;ECA1B0E,EAAsB3E,EAAAA,GAAOC,GAAG;;eCK9B,SAAS2E,EAAmB7D,GAAa,IAAD8D,EAEnD,MAAOC,EAAWC,IAAqB1E,EAAAA,EAAAA,UAAS,IAsBhD,OApBAM,EAAAA,EAAAA,YAAU,KAeFI,EAAM+D,WAAgC,IAAnB/D,EAAM+D,gBAAsCE,GAAnBjE,EAAM+D,WAdtDG,kBACI/B,EAAAA,EAAAA,KAAOW,wBACFqB,MAAMC,GACIA,EAAOjC,OAGjBgC,MAAME,IACHL,EAAaK,EAAerE,EAAM+D,WAAW,IAEhDO,OAAOC,IACJC,QAAQC,IAAI,6DAAoDF,EAAM,GAGlF,CAEIG,EACJ,GACD,CAAC1E,EAAM+D,aAGNxD,EAAAA,EAAAA,KAACqD,EAAmB,CAAApD,UAChBM,EAAAA,EAAAA,MAAC6D,EAAAA,EAAI,CAAAnE,SAAA,EACDD,EAAAA,EAAAA,KAACoE,EAAAA,EAAK5E,OAAM,CAAAS,UACRM,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EAAID,EAAAA,EAAAA,KAAA,QAAMkB,UAAU,UAASjB,SAAEuD,EAAUa,qBAA0B,IAAgB,QAAfd,EAACC,EAAUc,YAAI,IAAAf,EAAAA,EAAI,oCAE3FvD,EAAAA,EAAAA,KAACoE,EAAAA,EAAKG,KAAI,CAAAtE,UACNM,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACIM,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,gBAAcuD,EAAUgB,aAAa,QACzCjE,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,UAAQuD,EAAUiB,MAAM,QAC5BlE,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,sBAAoBuD,EAAUkB,iBAAiB,QACnDnE,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,aAAWuD,EAAUmB,QAAQ,QACjCpE,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,qBAAmBuD,EAAUoB,eAAe,QAChDrE,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,uBAAqBuD,EAAUqB,kBAAkB,QACrDtE,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,uBAAqBuD,EAAUsB,kBAAkB,QACrDvE,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,iCAA+BuD,EAAUuB,mBAAmB,WAChExE,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,WAASuD,EAAUwB,SAAS,gBAMxD,CC5Ce,SAASC,EAAaxF,GAAa,IAADyF,EAE7C,MAAOC,EAAQC,IAAkBrG,EAAAA,EAAAA,UAAS,IAwB1C,OAtBAM,EAAAA,EAAAA,YAAU,KAgBFI,EAAM0F,QAA0B,IAAhB1F,EAAM0F,QAf1BxB,kBACI/B,EAAAA,EAAAA,KAAOgB,wBACFgB,MAAMC,GACIA,EAAOjC,OAGjBgC,MAAMyB,IACHD,EAAUC,EAAY5F,EAAM0F,QAAQ,IAEvCpB,OAAOC,QAELsB,SAAQ,QAGnB,CAEIC,EACJ,GACD,CAAC9F,EAAM0F,UAINnF,EAAAA,EAAAA,KAACoD,EAAa,CAAAnD,UACVM,EAAAA,EAAAA,MAAC6D,EAAAA,EAAI,CAAAnE,SAAA,EACDD,EAAAA,EAAAA,KAACoE,EAAAA,EAAK5E,OAAM,CAAAS,UACRD,EAAAA,EAAAA,KAAA,MAAAC,SAAgB,QAAhBiF,EAAKC,EAAOb,YAAI,IAAAY,EAAAA,EAAI,mCAExBlF,EAAAA,EAAAA,KAACoE,EAAAA,EAAKG,KAAI,CAAAtE,UACNM,EAAAA,EAAAA,MAACiF,EAAAA,EAAG,CAAAvF,SAAA,EACAD,EAAAA,EAAAA,KAACyF,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAE3F,UACtBM,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CACyC,IAAlCkF,EAAOU,8BAAqEnC,GAAlCyB,EAAOU,yBAEhDtF,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,mBACAD,EAAAA,EAAAA,KAAA,OAAAC,UAEID,EAAAA,EAAAA,KAACsD,EAAkB,CAACE,UAAW2B,EAAOU,+BAG5C,IAENtF,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,aAAWkF,EAAOW,aACtBvF,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,oBAAkBkF,EAAOY,YAEV,IAAhBZ,EAAOa,OAAiBC,MAAMC,QAAQf,EAAOa,QAAYb,EAAOa,MAAMG,OAAS,GAC9E5F,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,UAAQkF,EAAOa,MAAMI,KAAKJ,IAEnBhG,EAAAA,EAAAA,KAAA,KAAGkB,UAAW,WAAW8E,cAAmBK,MAAO,IAAK5G,EAAM4G,MAAOC,SAAU,OAAQC,QAAS,uBAChG,GAIe,IAAzBpB,EAAOqB,gBACJjG,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,sBAAiBkF,EAAOqB,kBAAuB,GAGnC,IAArBrB,EAAOsB,YAAsBR,MAAMC,QAAQf,EAAOsB,aAAiBtB,EAAOsB,WAAWN,OAAS,GAC7F5F,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,kBAAgB,IAAI,IAAEkF,EAAOsB,WAAWL,KAAKM,IAEtC1G,EAAAA,EAAAA,KAAA,KAAG2G,KAAM,gBAAgBD,IAASE,OAAO,SAAS1F,UAAU,OAAMjB,SAAEyG,SACpE,GAES,IAAtBvB,EAAO0B,aACLtG,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAA+B,IAAzBkF,EAAOqB,eAAwB,qBAAuB,oBAAoB,KAAGrB,EAAO0B,eAAoB,IAGlHtG,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,+BAA6B,IAAMkF,EAAO2B,UAAU,QACxDvG,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,4BAA0B,IAAMkF,EAAO4B,MAAM,aAGzDxG,EAAAA,EAAAA,MAACkF,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAE3F,SAAA,EACtBD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,iBAEJM,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACID,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,KAAG2G,KAAMxB,EAAO6B,cAAgB,GAAIJ,OAAO,SAAQ3G,SAAC,4BAExDD,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,KAAG2G,KAAMxB,EAAO8B,4BAA8B,GAAIL,OAAO,SAAQ3G,SAAC,6BAEtEM,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,oBAAkBkF,EAAO+B,sBAAsB,WAEnD3G,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,iDAA+CkF,EAAOgC,yBAAyB,WAEnF5G,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,kDAA6CkF,EAAOiC,6BAA6B,sBAMrG7G,EAAAA,EAAAA,MAAC6D,EAAAA,EAAKiD,OAAM,CAAApH,SAAA,EACRD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,YACJM,EAAAA,EAAAA,MAACiF,EAAAA,EAAG,CAAAvF,SAAA,EACAM,EAAAA,EAAAA,MAACkF,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAE3F,SAAA,EAEvBD,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CAACK,UAAU,iBAAiBJ,IAAI,qBAAqBC,IAAK,4BAA6BoE,EAAOmC,uBACpGtH,EAAAA,EAAAA,KAAA,KAAAC,SAAG,2BAEPM,EAAAA,EAAAA,MAACkF,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAE3F,SAAA,EACvBD,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CAACK,UAAU,iBAAiBJ,IAAI,iBAAiBC,IAAK,4BAA6BoE,EAAOoC,mBAChGvH,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gCAO/B,CC9Ge,SAASuH,EAAU/H,GAE9B,MAAOgI,EAASC,IAAmB3I,EAAAA,EAAAA,UAAS,IAuB5C,OArBAM,EAAAA,EAAAA,YAAU,KAee,IAAjBI,EAAMgI,cAAkC/D,GAAjBjE,EAAMgI,SAdjC9D,kBACI/B,EAAAA,EAAAA,KAAOa,eACFmB,MAAMC,GACIA,EAAOjC,OAGjBgC,MAAM+D,IACHD,EAAWC,EAAelI,EAAMgI,SAAS,IAE5C1D,OAAOC,IACJC,QAAQC,IAAI,6DAAoDF,EAAM,GAGlF,CAIA4D,EAAe,GAChB,CAACnI,EAAMgI,WAGNzH,EAAAA,EAAAA,KAACmD,EAAQ,CAAAlD,UACLM,EAAAA,EAAAA,MAAC6D,EAAAA,EAAI,CAAAnE,SAAA,EACDD,EAAAA,EAAAA,KAACoE,EAAAA,EAAK5E,OAAM,CAAAS,UACRD,EAAAA,EAAAA,KAAA,MAAAC,SAAKwH,EAAQnD,UAEjB/D,EAAAA,EAAAA,MAAC6D,EAAAA,EAAKG,KAAI,CAAAtE,SAAA,EACNM,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACIM,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,YAAUwH,EAAQ9C,QAAQ,KAACpE,EAAAA,EAAAA,MAAA,QAAMW,UAAU,UAASjB,SAAA,CAAC,KAAG,MAAQwH,EAAQI,WAAe,QAC3FtH,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,iCAA+BwH,EAAQK,yBAAyB,UACpEvH,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,sEAA8DwH,EAAQM,cAC1ExH,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,UAAQwH,EAAQO,MAAM,uBAAeP,EAAQQ,eAAe,SAChE1H,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,6BAAwBwH,EAAQS,mBACpC3H,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,4BAAuBwH,EAAQU,mBACnC5H,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,oBAAgBM,EAAAA,EAAAA,MAAA,QAAMW,UAAU,kBAAiBjB,SAAA,CAAC,IAAEwH,EAAQW,eAAe,WAC/E7H,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,iDAAuCM,EAAAA,EAAAA,MAAA,QAAMW,UAAU,kBAAiBjB,SAAA,CAAC,IAAEwH,EAAQY,kBAAkB,OAAQ,QACjH9H,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,YAAUwH,EAAQa,YACtB/H,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,0BAAwBwH,EAAQc,aAExCvI,EAAAA,EAAAA,KAAA,MAAAC,SAAI,iBACJM,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACID,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,KAAG2G,KAAMc,EAAQT,cAAeJ,OAAO,SAAQ3G,SAAC,4BACpDD,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,KAAG2G,KAAMc,EAAQe,iBAAkB5B,OAAO,SAAQ3G,SAAC,iBACvDD,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,KAAG2G,KAAMc,EAAQgB,kBAAmB7B,OAAO,SAAQ3G,SAAC,yBAGjC,IAAxBwH,EAAQiB,cAAwBzC,MAAMC,QAAQuB,EAAQiB,eAAmBjB,EAAQiB,aAAavC,OAAS,GACtGnG,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAC2I,EAAAA,EAAS,CAAA1I,SAEFwH,EAAQiB,aAAatC,KAAI,CAACjB,EAAayD,KAE5BrI,EAAAA,EAAAA,MAACoI,EAAAA,EAAUE,KAAI,CAACC,SAAUF,EAAQ,GAAG3I,SAAA,EACxCD,EAAAA,EAAAA,KAAC2I,EAAAA,EAAUnJ,OAAM,CAAAS,SAAEkF,KACnBnF,EAAAA,EAAAA,KAAC2I,EAAAA,EAAUpE,KAAI,CAAAtE,UACXD,EAAAA,EAAAA,KAACiF,EAAY,CAACE,OAAQA,eAMrC,UAQjC,CCjFO,MAAM4D,EAAgBrK,EAAAA,GAAOC,GAAG;;;;;gBCQxB,SAASqK,EAAavJ,GAAa,IAADyF,EAE7C,MAAOC,EAAQC,IAAkBrG,EAAAA,EAAAA,UAAS,KACnCkK,EAASC,IAAcnK,EAAAA,EAAAA,UAAiB,IA2C/C,OAzCAM,EAAAA,EAAAA,YAAU,KAeFI,EAAM0F,QAA0B,IAAhB1F,EAAM0F,QAd1BxB,kBACI/B,EAAAA,EAAAA,KAAOe,wBACFiB,MAAMC,GACIA,EAAOjC,OAGjBgC,MAAMyB,IACHD,EAAUC,EAAY5F,EAAM0F,QAAQ,IAEvCpB,OAAOC,IACJC,QAAQC,IAAI,2DAAkDF,EAAM,GAGhF,CAEIuB,EACJ,GACD,CAAC9F,EAAM0F,UAEV9F,EAAAA,EAAAA,YAAU,UAeQqE,GAAVyB,GAAiC,IAAVA,GAb3BxB,iBACI,IAAIX,EAAOmC,EAAOgE,oBACNzF,GAARV,GAA6B,IAARA,IACrBpB,EAAAA,EAAAA,KAAOmB,YAAYC,GACdY,MAAKwF,IAEFF,EAAWE,EAAIxH,KAAK,IAEvBmC,OAAOC,IACJC,QAAQC,IAAI,2DAAkDF,EAAM,GAGpF,CAEIjB,EACJ,GACD,CAACoC,KAIAnF,EAAAA,EAAAA,KAAC+I,EAAa,CAAA9I,UAEVM,EAAAA,EAAAA,MAAC6D,EAAAA,EAAI,CAAAnE,SAAA,EACDD,EAAAA,EAAAA,KAACoE,EAAAA,EAAK5E,OAAM,CAAAS,UACRD,EAAAA,EAAAA,KAAA,MAAAC,SAAgB,QAAhBiF,EAAKC,EAAOb,YAAI,IAAAY,EAAAA,EAAI,mCAGxBlF,EAAAA,EAAAA,KAACoE,EAAAA,EAAKG,KAAI,CAAAtE,UACNM,EAAAA,EAAAA,MAACiF,EAAAA,EAAG,CAAAvF,SAAA,EACAD,EAAAA,EAAAA,KAACyF,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAE3F,UACtBM,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CACyC,IAAlCkF,EAAOU,8BAAqEnC,GAAlCyB,EAAOU,yBAEhDtF,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,mBACAD,EAAAA,EAAAA,KAAA,OAAAC,UAEID,EAAAA,EAAAA,KAACsD,EAAkB,CAACE,UAAW2B,EAAOU,+BAG5C,IAENtF,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,UAAMD,EAAAA,EAAAA,KAAA,QAAMkB,UAAU,kBAAiBjB,SAAEkF,EAAOkE,UAEnDlE,EAAOW,UAAgC,KAApBX,EAAOW,WACvBvF,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,aAAWkF,EAAOW,YAEzBX,EAAOR,SAA8B,KAAnBQ,EAAOR,UACtBpE,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,YAAUkF,EAAOR,WAExBQ,EAAOmE,OAA0B,KAAjBnE,EAAOmE,QACpB/I,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,UAAQkF,EAAOmE,UAEvB/I,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,gCAA4BD,EAAAA,EAAAA,KAAA,OAAKqG,MAAO,IAAK5G,EAAM4G,MAAOkD,gBAAiBpE,EAAOqE,MAAOxI,MAAO,OAAQC,OAAQ,OAAQsF,QAAS,gBAAiBtG,SAAC,QAAS,KAACD,EAAAA,EAAAA,KAAA,QAAAC,SAAOkF,EAAOqE,QAAa,aAKpMjJ,EAAAA,EAAAA,MAACkF,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAE3F,SAAA,EACtBD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,iBACJM,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACID,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,KAAG2G,KAAMxB,EAAO6B,cAAgB,GAAIJ,OAAO,SAAQ3G,SAAC,4BACxDD,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,KAAG2G,KAAMxB,EAAOqD,iBAAmB,GAAI5B,OAAO,SAAQ3G,SAAC,iBAC3DD,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,KAAG2G,KAAMxB,EAAOsE,mBAAqB,GAAI7C,OAAO,SAAQ3G,SAAC,6BAC7DD,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,KAAG2G,KAAMxB,EAAO8B,4BAA8B,GAAIL,OAAO,SAAQ3G,SAAC,6BACtEM,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,oBAAkBkF,EAAO+B,sBAAsB,WACnD3G,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,iDAA+CkF,EAAOgC,yBAAyB,WACnF5G,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CAAI,kDAA6CkF,EAAOiC,6BAA6B,iBAI7F7G,EAAAA,EAAAA,MAACkF,EAAAA,EAAG,CAACvE,UAAU,MAAMwE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG3F,SAAA,EACxCD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,gBACJD,EAAAA,EAAAA,KAAA,KAAGkB,UAAU,MAAKjB,SAAEkF,EAAOuE,oBAIDhG,GAAzByB,EAAOgE,gBAAwD,IAAzBhE,EAAOgE,gBAC1C5I,EAAAA,EAAAA,MAACkF,EAAAA,EAAG,CAACvE,UAAU,MAAMwE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG3F,SAAA,EACxCD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,yBACAD,EAAAA,EAAAA,KAAA,OAAKkB,UAAU,MAAKjB,UAChBD,EAAAA,EAAAA,KAAC2J,EAAAA,GAAQ,CACLC,WAAY,CACRC,GAAIC,IAAyB,IAAxB,KAAEC,KAAStK,GAAOqK,EACfE,EAAO,GACX,GAA8B,kBAAnBvK,EAAMQ,SACb+J,EAAOvK,EAAMQ,cACV,GAAIgG,MAAMC,QAAQzG,EAAMQ,UAAW,CAEtC,MAAMgK,EAAcC,EAAAA,SAAeC,QAAQ1K,EAAMQ,UAAUmK,MACtDC,GAAeH,EAAAA,eAAqBG,IAAyB,WAAfA,EAAM5I,OAEzD,GACIyI,EAAAA,eAAqBD,IACE,kBAAhBA,GACS,OAAhBA,GACA,UAAWA,GACVA,EAA2DxK,OAC3DwK,EAA0DxK,MAAMQ,SACnE,CACE,MAAMqK,EAAsBL,EAAyDxK,MAAMQ,SAC3F+J,OAA8BtG,IAAvB4G,EAAmCC,OAAOD,GAAsB,EAC3E,MACIN,EAAOE,EAAAA,SAAeC,QAAQ1K,EAAMQ,UAAUuK,KAAK,GAE3D,CACIvG,QAAQC,IAAI,sDAA6C8F,GAC7D,MAAM3I,EAAK8D,EAAOb,KAAKmG,WAClBC,UAAU,OACVC,QAAQ,mBAAoB,IAC5BA,QAAQ,mBAAoB,IAC5BC,OACAD,QAAQ,OAAQ,KAChBE,cAAe,IAAMb,EACrBS,WACAC,UAAU,OACVC,QAAQ,mBAAoB,IAC5BA,QAAQ,mBAAoB,IAC5BC,OACAD,QAAQ,OAAQ,KAChBE,cAEL,OAAO7K,EAAAA,EAAAA,KAAA,SAAQP,EAAO4B,GAAIA,GAAM,GAGtCpB,SAEE,OAAPgJ,QAAO,IAAPA,EAAAA,EAAW,UAMtB,SAKlB1I,EAAAA,EAAAA,MAAC6D,EAAAA,EAAKiD,OAAM,CAAApH,SAAA,EACRD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,YACJM,EAAAA,EAAAA,MAACiF,EAAAA,EAAG,CAAAvF,SAAA,EACAM,EAAAA,EAAAA,MAACkF,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAE3F,SAAA,EACvBD,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CAACK,UAAU,YAAYJ,IAAI,qBAAqBC,IAAK,4BAA6BoE,EAAOmC,uBAC/FtH,EAAAA,EAAAA,KAAA,KAAAC,SAAG,2BAEPM,EAAAA,EAAAA,MAACkF,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAE3F,SAAA,EACvBD,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CAACK,UAAU,YAAYJ,IAAI,kBAAkBC,IAAK,4BAA6BoE,EAAO2F,qBAC5F9K,EAAAA,EAAAA,KAAA,KAAAC,SAAG,wBAEPM,EAAAA,EAAAA,MAACkF,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAE3F,SAAA,EACvBD,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CAACK,UAAU,YAAYJ,IAAI,iBAAiBC,IAAK,4BAA6BoE,EAAOoC,mBAC3FvH,EAAAA,EAAAA,KAAA,KAAAC,SAAG,uBAEPM,EAAAA,EAAAA,MAACkF,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAE3F,SAAA,EACvBD,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CAACK,UAAU,YAAYJ,IAAI,aAAaC,IAAK,4BAA6BoE,EAAO4F,eACvF/K,EAAAA,EAAAA,KAAA,KAAAC,SAAG,6BAQ/B,CC/Le,SAAS+K,EAAMvL,GAC1B,MAAM,QAAEgI,EAAO,KAAEwD,GAASxL,EAE1B,OAAIwL,GAAgB,IAARA,GAEJjL,EAAAA,EAAAA,KAACkD,EAAI,CAAAjD,UACDD,EAAAA,EAAAA,KAACgJ,EAAY,CAAC7D,OAAQ8F,MAIvBxD,GAAsB,IAAXA,GAGdzH,EAAAA,EAAAA,KAACkD,EAAI,CAAAjD,UACDD,EAAAA,EAAAA,KAACwH,EAAS,CAACC,QAASA,OAMxBzH,EAAAA,EAAAA,KAACkD,EAAI,CAAAjD,UACDD,EAAAA,EAAAA,KAACoE,EAAAA,EAAI,CAAClD,UAAU,cAAajB,UACzBD,EAAAA,EAAAA,KAACoE,EAAAA,EAAKG,KAAI,CAAAtE,UACNM,EAAAA,EAAAA,MAAC6D,EAAAA,EAAK8G,KAAI,CAAChK,UAAU,kBAAiBjB,SAAA,CAAC,gKACgHD,EAAAA,EAAAA,KAAA,KAAG2G,KAAK,uDAAsD1G,SAAC,kBAAiB,wYAO/P,CC/Be,SAASkL,EAAQrB,GAAwD,IAAvD,gBAAEsB,EAAe,iBAAEC,GAAiCvB,EAGjF,MAAMwB,EAAyC,CAC3CC,OAAQ,UACRC,MAAO,QACPC,IAAK,MACLC,QAAS,UACTC,SAAU,WACVC,QAAS,UACTC,OAAQ,SACRC,MAAO,QACPC,QAAS,UACTC,OAAQ,SACRC,MAAO,SAGLC,EAAoC,CACtCC,UAAW,QACXC,UAAW,OACXC,UAAW,cACXC,UAAW,aACXC,UAAW,YACXC,UAAW,aACXC,UAAW,aACXC,UAAW,QACXC,UAAW,QACXC,UAAW,UACXC,WAAY,OACZC,WAAY,UACZC,WAAY,YACZC,WAAY,QACZC,WAAY,aACZC,WAAY,QACZC,WAAY,QACZC,WAAY,UACZC,WAAY,MACZC,WAAY,MACZC,WAAY,aACZC,WAAY,SAwDhB,OArDAnO,EAAAA,EAAAA,YAAU,KACN,MAAMoO,EAAoBC,IACtB,MACMC,EADSD,EAAM9G,OACEvF,GACvB,IAAKsM,EAAS,OAEd,IAAIC,EAAatC,EAAeqC,GAChC,IAAKC,EACD,IAAK,MAAOhP,EAAK6F,KAAUoJ,OAAOC,QAAQxC,GAAiB,CACvD,MAAMyC,EAASnP,EACf,GAAImP,GAAUJ,EAAQK,SAAS,GAAGD,KAAW,CACzCH,EAAanJ,EACb,KACJ,CACJ,CAEAmJ,IACAvC,EAAiB,IACjBD,EAAgBwC,IAGpB,IAAIK,EAAU/B,EAAUyB,GACxB,IAAKM,EACD,IAAK,MAAOrP,EAAK6F,KAAUoJ,OAAOC,QAAQ5B,GAAY,CAClD,MAAM6B,EAASnP,EACf,GAAImP,GAAUJ,EAAQK,SAAS,GAAGD,KAAW,CACzCE,EAAUxJ,EACV,KACJ,CACJ,CAEAwJ,IACA7C,EAAgB,IAChBC,EAAiB4C,GACrB,EAIEC,EAAgBC,SAASC,eAAe,uBAQ9C,OAPa,OAAbF,QAAa,IAAbA,GAAAA,EAAeG,iBAAiB,QAAQ,KACpC,MAAMC,EAAUJ,EAAoCK,gBAChDD,GACAA,EAAOD,iBAAiB,QAASZ,EACrC,IAGG,KACH,MAAMe,EAAWL,SAASC,eAAe,uBACnCE,EAAkB,OAARE,QAAQ,IAARA,OAAQ,EAARA,EAAgCD,gBAC1C,OAAND,QAAM,IAANA,GAAAA,EAAQG,oBAAoB,QAAShB,EAAiB,CACzD,GACF,KAGCzN,EAAAA,EAAAA,KAAA,UACIqB,GAAG,sBACHO,KAAM,sDACNH,KAAK,gBACLT,MAAM,OACNC,OAAO,OAAMhB,SAChB,oCAIT,C,cCzGe,SAASyO,IACpB,MAAOjH,EAASC,GAAcwC,EAAAA,SAAe,KACtCe,EAAM0D,GAAWzE,EAAAA,SAAe,IAUvC,OACI3J,EAAAA,EAAAA,MAAC2C,EAAI,CAAAjD,SAAA,EACDD,EAAAA,EAAAA,KAACR,EAAAA,EAAM,KACPQ,EAAAA,EAAAA,KAAA,QAAAC,UACID,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CAACoO,MAAM,KAAK1N,UAAU,OAAMjB,UAClCM,EAAAA,EAAAA,MAACiF,EAAAA,EAAG,CAAAvF,SAAA,EAKAD,EAAAA,EAAAA,KAACyF,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAG1E,UAAU,OAAMjB,UACxCD,EAAAA,EAAAA,KAAA,SAAAC,UACID,EAAAA,EAAAA,KAACoE,EAAAA,EAAI,CAAAnE,UACDD,EAAAA,EAAAA,KAACoE,EAAAA,EAAKG,KAAI,CAAAtE,UACND,EAAAA,EAAAA,KAACmL,EAAQ,CAACC,gBAtBjBwC,IACzBlG,EAAWkG,EAAW,EAqB0DvC,iBAlB1D4C,IACtBU,EAAQV,EAAQ,aAuBAjO,EAAAA,EAAAA,KAACyF,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAG1E,UAAU,OAAMjB,UACxCD,EAAAA,EAAAA,KAAA,WAAAC,UACID,EAAAA,EAAAA,KAACgL,EAAK,CAACvD,QAASA,EAASwD,KAAMA,iBAQ/D,C","sources":["pages/header/styles.ts","utils/usePersistedState.ts","pages/header/index.tsx","services/data.ts","pages/home/styles.ts","components/infos/styles.ts","components/sephiroth/styles.ts","components/minor_arcana/styles.ts","components/caractere_hebraico/styles.ts","components/caractere_hebraico/index.tsx","components/minor_arcana/index.tsx","components/sephiroth/index.tsx","components/major_arcana/styles.ts","components/major_arcana/index.tsx","components/infos/index.tsx","components/kabbalah/index.tsx","pages/home/index.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Headers = styled.div`\r\n\r\n.navbar-brand {\r\ncolor: #fff;\r\n}\r\n`;","import { useState, useEffect, Dispatch, SetStateAction } from 'react';\r\n\r\ntype Response<T> = [\r\n  T,\r\n  Dispatch<SetStateAction<T>>,\r\n];\r\n\r\nfunction usePersistedState<T>(key: string): Response<T> {\r\n  const [state, setState] = useState(() => {\r\n    const storageValue = localStorage.getItem(key);    \r\n    if (storageValue) {\r\n      return JSON.parse(storageValue);\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n \r\n  return [state, setState];\r\n}\r\n\r\nexport default usePersistedState;","import React, { useState } from 'react';\r\nimport { Navbar, Container, Nav, Form, Button, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Headers } from './styles'\r\n\r\n\r\nimport usePeristedState from '../../utils/usePersistedState';\r\n\r\n\r\nexport default function Header(props: any) {\r\n\r\n    const [term, setTerm] = useState((props.term ?? ''));\r\n    const [user, setUser] = usePeristedState<any>('user');\r\n\r\n    return (\r\n        <Headers>\r\n            <header>\r\n                <Navbar  collapseOnSelect expand=\"lg\" bg=\"dark\"  variant=\"dark\" >\r\n                    <Container >\r\n                        <Navbar.Brand as={Link} to=\"/\">\r\n\r\n                            <Image\r\n                                alt=\"\"\r\n                                src={`${process.env.PUBLIC_URL}/logo.png`}\r\n                                width=\"30\"\r\n                                height=\"30\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />{' '}\r\n                            Grimório open source\r\n                        </Navbar.Brand>\r\n                        \r\n                        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                            <Nav className=\"me-auto\">\r\n                                <Nav.Link className=\"text-light\" as={Link} to=\"/\">Home</Nav.Link>\r\n                                <Nav.Link className=\"text-light\" as={Link} to=\"/maps\">Mapas</Nav.Link>\r\n                                <Nav.Link className=\"text-light\" as={Link} to=\"/references\">Referências</Nav.Link>\r\n                            </Nav>\r\n                            <Form className=\"d-flex\">\r\n                                <Form.Control\r\n                                    type=\"search\"\r\n                                    placeholder=\"Arcanos, Anjos, Sephira\"\r\n                                    className=\"me-2\"\r\n                                    aria-label=\"Arcanos, Anjos, Sephira\"\r\n                                />\r\n                                <Button variant=\"outline-success\">Pesquisar</Button>\r\n                            </Form>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </header>\r\n        </Headers>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport default function data() {\r\n\r\n\r\n    const base_url = (process.env.REACT_APP_BASE_URL ?? `${window.location.origin}`) + '/assets/';\r\n\r\n    const data = {\r\n\r\n        getAngels: function getAngels() {\r\n            return axios.get(`${base_url}angels.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getCaractere_hebraico: function getCaractere_hebraico() {\r\n            return axios.get(`${base_url}caractere_hebraico.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getOdus: function getOdus() {\r\n            return axios.get(`${base_url}odus.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getSephiroth: function getSephiroth() {\r\n            return axios.get(`${base_url}sephiroth.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getTarot: function getTarot() {\r\n            return axios.get(`${base_url}tarot.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getTarot_Arcana_Major: function getTarot_Arcana_Major() {\r\n            return axios.get(`${base_url}tarot_arcana_major.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n        getTarot_Arcana_Minor: function getTarot_Arcana_Minor() {\r\n            return axios.get(`${base_url}tarot_arcana_minor.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getSigns: function getSigns() {\r\n            return axios.get(`${base_url}signs.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getPlanet: function getPlanet() {\r\n            return axios.get(`${base_url}planets.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n        getMarkdown: function getMarkdown(link: string) {\r\n            return axios.get(`${base_url}markdowns/${link}`)\r\n        },\r\n\r\n        getReferences: function getReferences() {\r\n            return axios.get(`${base_url}references.json`, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                }\r\n            })\r\n        },\r\n\r\n\r\n\r\n    }\r\n\r\n    return data;\r\n}","import styled from 'styled-components';\r\n\r\nexport const Divs = styled.div`\r\n\r\nbackground-color: #000 !important;\r\ncolor: #fff !important;\r\n}\r\n\r\n.container-md{\r\n   max-width: 150rem !important;\r\n}\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Divs = styled.div`\r\n\r\n\r\na{\r\n   color: #ff9494;\r\n}\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Sephiras = styled.div`\r\n\r\nspan.simbolo{\r\n   font-size: 2.5rem;\r\n}\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Minor_arcanas = styled.div`\r\nspan.simbolo{\r\n   font-size: 4rem;\r\n}\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Caractere_hebraicos = styled.div`\r\n\r\n`;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nimport { Caractere_hebraicos } from './styles';\r\n\r\nimport data from '../../services/data';\r\n\r\nexport default function Caractere_hebraico(props: any) {\r\n\r\n    const [caractere, setCaractere]: any = useState('');\r\n\r\n    useEffect(() => {\r\n        async function Get_caractere() {\r\n            data().getCaractere_hebraico()\r\n                .then((result: any) => {\r\n                    return result.data;\r\n\r\n                })\r\n                .then((full_caractere: any) => {\r\n                    setCaractere(full_caractere[props.caractere])\r\n                })\r\n                .catch((error: any) => {\r\n                    console.log(\"🚀 ~ file: index.tsx:20 ~ Get_caractere ~ error:\", error)\r\n\r\n                })\r\n        }\r\n        if (props.caractere && props.caractere != '' && props.caractere != undefined) {\r\n            Get_caractere();\r\n        }\r\n    }, [props.caractere]);\r\n\r\n    return (\r\n        <Caractere_hebraicos>\r\n            <Card>\r\n                <Card.Header>\r\n                    <h2><span className='hebraic'>{caractere.caractere_hebraico}</span> {caractere.name ?? 'titulo de informações'}</h2>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <ul>\r\n                        <li>Significado: {caractere.significance} </li>\r\n                        <li>Valor: {caractere.value} </li>\r\n                        <li>Letra equivalente: {caractere.caractere_romane} </li>\r\n                        <li>Planeta:  {caractere.planeta} </li>\r\n                        <li>Correspondencia:  {caractere.correspondence} </li>\r\n                        <li>Qualidade Positiva: {caractere.positive_polarity} </li>\r\n                        <li>Qualidade Negativa: {caractere.negative_polarity} </li>\r\n                        <li>Pagina do Kabbalah Hermetica: {caractere.kabbalah_hermetica} pg </li>\r\n                        <li>Ritual: {caractere.exercise} </li>\r\n                    </ul>\r\n                </Card.Body>\r\n            </Card>\r\n        </Caractere_hebraicos>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Card, Row, Col, Image } from 'react-bootstrap';\r\n\r\nimport { Minor_arcanas } from './styles';\r\n\r\nimport data from '../../services/data';\r\n\r\nimport Caractere_hebraico from '../caractere_hebraico'\r\n\r\nexport default function Minor_arcana(props: any) {\r\n\r\n    const [arcana, setArcana]: any = useState('');\r\n\r\n    useEffect(() => {\r\n        async function Get_arcanas() {\r\n            data().getTarot_Arcana_Minor()\r\n                .then((result: any) => {\r\n                    return result.data;\r\n\r\n                })\r\n                .then((full_arcana: any) => {\r\n                    setArcana(full_arcana[props.arcana])\r\n                })\r\n                .catch((error: any) => {\r\n\r\n                }).finally(() => {\r\n\r\n                })\r\n        }\r\n        if (props.arcana && props.arcana != '') {\r\n            Get_arcanas();\r\n        }\r\n    }, [props.arcana]);\r\n\r\n\r\n    return (\r\n        <Minor_arcanas>\r\n            <Card>\r\n                <Card.Header>\r\n                    <h2>{arcana.name ?? 'titulo de informações'}</h2>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col sm={12} md={6} lg={6}>\r\n                            <ul>\r\n                                {((arcana.caractere_hebraico_link != ``) && (arcana.caractere_hebraico_link != undefined)) ?\r\n\r\n                                    <li>letra Hebraica:\r\n                                        <div>\r\n                                            { }\r\n                                            <Caractere_hebraico caractere={arcana.caractere_hebraico_link} />\r\n                                        </div>\r\n                                    </li>\r\n                                    : ``\r\n                                }\r\n                                <li>elemento: {arcana.elemento}</li>\r\n                                <li>Palavras chaves: {arcana.word_key}</li>\r\n\r\n                                {((arcana.dados != '') && (Array.isArray(arcana.dados)) && (arcana.dados.length > 0)) ?\r\n                                    <li>Dados: {arcana.dados.map((dados: any) => {\r\n\r\n                                        return <i className={`bi-dice-${dados}-fill me-3`} style={{ ...props.style, fontSize: `2rem`, display: `inline-block` }}></i>\r\n                                    })}</li> : ``\r\n                                }\r\n\r\n                                {\r\n                                    (arcana.arquetipo_MBTI != ``) ?\r\n                                        <li>Arquétipo MBTI: {arcana.arquetipo_MBTI}</li> : ''\r\n                                }\r\n\r\n                                {((arcana.name_angel != '') && (Array.isArray(arcana.name_angel)) && (arcana.name_angel.length > 0)) ?\r\n                                    <li>Nome de Anjos: {` `} {arcana.name_angel.map((angel: any) => {\r\n\r\n                                        return <a href={`/?angel_name=${angel}`} target=\"_blank\" className='me-3'>{angel}</a>\r\n                                    })}</li> : ``\r\n                                }\r\n                                {(arcana.astrologica != '') ?\r\n                                    <li>{(arcana.arquetipo_MBTI != ``) ? 'Intervalo Astral: ' : 'Face Planetaria: '}  {arcana.astrologica}</li> : ``\r\n                                }\r\n\r\n                                <li>Correspondente sephirotico: {` ` + arcana.sephiroth} </li>\r\n                                <li>Correspondente de reino: {` ` + arcana.reino} </li>\r\n                            </ul>\r\n                        </Col>\r\n                        <Col sm={12} md={6} lg={6}>\r\n                            <h2>Referencias</h2>\r\n\r\n                            <ul>\r\n                                <li><a href={arcana.link_wiki_mdd + ``} target=\"_blank\"> Wiki Projeto Mayhem</a></li>\r\n\r\n                                <li><a href={arcana.link_youtube_jornada_do_ser + ``} target=\"_blank\">Video Tarô Virtual</a></li>\r\n\r\n                                <li>Tarot Hermetico: {arcana.pages_tarot_hermetico} .pg</li>\r\n\r\n                                <li>Pagina do Tarot O Templo Vivente Frater Goya: {arcana.pages_tarot_crowley_goya} .pg</li>\r\n\r\n                                <li>Pagina do TARÔ DE CROWLEY - PALAVRAS-CHAVE: {arcana.pages_tarot_crowley_word_key} .pg</li>\r\n                            </ul>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <h3>Cartas</h3>\r\n                    <Row>\r\n                        <Col sm={12} md={12} lg={3}>\r\n\r\n                            <Image className='img-fluid pb-3' alt='arcano Rider Waite' src={`${process.env.PUBLIC_URL}/${arcana.image_rider_waite}`} />\r\n                            <p>arcano Rider Waite</p>\r\n                        </Col>\r\n                        <Col sm={12} md={12} lg={3}>\r\n                            <Image className='img-fluid pb-3' alt='arcano Crowley' src={`${process.env.PUBLIC_URL}/${arcana.image_crowley}`} />\r\n                            <p>arcano Crowley</p>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Minor_arcanas>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Accordion, Card, Image } from 'react-bootstrap';\r\n\r\nimport { Sephiras } from './styles';\r\n\r\nimport data from '../../services/data';\r\n\r\nimport Minor_arcana from '../minor_arcana';\r\n\r\nexport default function Sephiroth(props: any) {\r\n\r\n    const [sephira, setSephira]: any = useState('');\r\n\r\n    useEffect(() => {\r\n        async function Get_sephiroth() {\r\n            data().getSephiroth()\r\n                .then((result: any) => {\r\n                    return result.data;\r\n\r\n                })\r\n                .then((full_sephiroth: any) => {\r\n                    setSephira(full_sephiroth[props.sephira])\r\n                })\r\n                .catch((error: any) => {\r\n                    console.log(\"🚀 ~ file: index.tsx:20 ~ Get_sephiroth ~ error:\", error)\r\n\r\n                })\r\n        }\r\n        if (props.sephira == '' || props.sephira == undefined) {\r\n            return;\r\n        }\r\n        Get_sephiroth();\r\n    }, [props.sephira]);\r\n\r\n    return (\r\n        <Sephiras>\r\n            <Card>\r\n                <Card.Header>\r\n                    <h1>{sephira.name}</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <ul>\r\n                        <li>Planeta: {sephira.planeta} <span className='simbolo'>  {'   ' + sephira.simbolo}</span> </li>\r\n                        <li>Pagina do Kabbalah Hermetica: {sephira.pages_kabbalah_hermetica} pg</li>\r\n                        <li>Carruagem de acesso (persona na bíblia que tem uma conexão): {sephira.carruagem}</li>\r\n                        <li>Mundo: {sephira.mundo} ( tradução:  {sephira.mundo_traducao} )</li>\r\n                        <li>Casta (visão judaica): {sephira.casta_hebraica}</li>\r\n                        <li>Anjo (visão judaica): {sephira.angel_hebraica}</li>\r\n                        <li>Vogal hebraico: <span className='simbolo hebraic'> {sephira.vogal_hebraico} </span></li>\r\n                        <li>tetragrama com vogal (para meditação): <span className='simbolo hebraic'> {sephira.tetragrama_vogais} </span> </li>\r\n                        <li>Energia: {sephira.energia}</li>\r\n                        <li>dedos correspondentes: {sephira.dedos}</li>\r\n                    </ul>\r\n                    <h2>Referencias</h2>\r\n                    <ul>\r\n                        <li><a href={sephira.link_wiki_mdd} target=\"_blank\"> Wiki Projeto Mayhem</a></li>\r\n                        <li><a href={sephira.link_youtube_cdh} target=\"_blank\">Video CdH</a></li>\r\n                        <li><a href={sephira.link_youtube_yair} target=\"_blank\">Video Yair Alon</a></li>\r\n                    </ul>\r\n\r\n                    {((sephira.minor_arcana != '') && (Array.isArray(sephira.minor_arcana)) && (sephira.minor_arcana.length > 0)) ?\r\n                        <div>\r\n                            <Accordion>\r\n                                {\r\n                                    sephira.minor_arcana.map((arcana: any, index: number) => {\r\n\r\n                                        return <Accordion.Item eventKey={index + ''}>\r\n                                            <Accordion.Header>{arcana}</Accordion.Header>\r\n                                            <Accordion.Body>\r\n                                                <Minor_arcana arcana={arcana} />\r\n                                            </Accordion.Body>\r\n                                        </Accordion.Item>\r\n                                    })\r\n                                }\r\n                            </Accordion>\r\n                        </div> : ``\r\n                    }\r\n\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        </Sephiras>\r\n    )\r\n}","import styled from 'styled-components';\r\n\r\nexport const Major_arcanas = styled.div`\r\n\r\nspan.simbolo{\r\n    font-size: 2.5rem;\r\n }\r\n`;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Card, Row, Col, Image } from 'react-bootstrap';\r\n\r\nimport { Major_arcanas } from './styles';\r\n\r\nimport Caractere_hebraico from '../caractere_hebraico'\r\nimport Markdown from 'react-markdown'\r\n\r\nimport data from '../../services/data';\r\n\r\nexport default function Major_arcana(props: any) {\r\n\r\n    const [arcana, setArcana]: any = useState('');\r\n    const [content, setContent] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        async function Get_arcanas() {\r\n            data().getTarot_Arcana_Major()\r\n                .then((result: any) => {\r\n                    return result.data;\r\n\r\n                })\r\n                .then((full_arcana: any) => {\r\n                    setArcana(full_arcana[props.arcana]);\r\n                })\r\n                .catch((error: any) => {\r\n                    console.log(\"🚀 ~ file: index.tsx:20 ~ Get_arcanas ~ error:\", error)\r\n\r\n                })\r\n        }\r\n        if (props.arcana && props.arcana != '') {\r\n            Get_arcanas();\r\n        }\r\n    }, [props.arcana]);\r\n\r\n    useEffect(() => {\r\n\r\n        async function getMarkdown() {\r\n            let link = arcana.interpretation;\r\n            if (link != undefined && link != ``) {\r\n                data().getMarkdown(link)\r\n                    .then(res => {\r\n\r\n                        setContent(res.data);\r\n                    })\r\n                    .catch((error: any) => {\r\n                        console.log(\"🚀 ~ file: index.tsx:20 ~ Get_arcanas ~ error:\", error)\r\n                    })\r\n            }\r\n        }\r\n        if (arcana != undefined && arcana != ``) {\r\n            getMarkdown();\r\n        }\r\n    }, [arcana]);\r\n\r\n\r\n    return (\r\n        <Major_arcanas>\r\n\r\n            <Card>\r\n                <Card.Header>\r\n                    <h1>{arcana.name ?? 'titulo de informações'}</h1>\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col sm={12} md={6} lg={6}>\r\n                            <ul>\r\n                                {((arcana.caractere_hebraico_link != ``) && (arcana.caractere_hebraico_link != undefined)) ?\r\n\r\n                                    <li>letra Hebraica:\r\n                                        <div>\r\n                                            { }\r\n                                            <Caractere_hebraico caractere={arcana.caractere_hebraico_link} />\r\n                                        </div>\r\n                                    </li>\r\n                                    : ``\r\n                                }\r\n                                <li>Runa: <span className='simbolo hebraic'>{arcana.runa}</span></li>\r\n\r\n                                {arcana.elemento && arcana.elemento !== \"\" && (\r\n                                    <li>Elemento: {arcana.elemento}</li>\r\n                                )}\r\n                                {arcana.planeta && arcana.planeta !== \"\" && (\r\n                                    <li>Planeta: {arcana.planeta}</li>\r\n                                )}\r\n                                {arcana.signo && arcana.signo !== \"\" && (\r\n                                    <li>Signo: {arcana.signo}</li>\r\n                                )}\r\n                                <li>Cor (segundo Golden Dawn):  <div style={{ ...props.style, backgroundColor: arcana.color, width: `50px`, height: `20px`, display: `inline-block` }}>   </div> <span>{arcana.color}</span> </li>\r\n                                \r\n                            </ul>\r\n\r\n                        </Col>\r\n                        <Col sm={12} md={6} lg={6}>\r\n                            <h2>Referencias</h2>\r\n                            <ul>\r\n                                <li><a href={arcana.link_wiki_mdd + ``} target=\"_blank\"> Wiki Projeto Mayhem</a></li>\r\n                                <li><a href={arcana.link_youtube_cdh + ``} target=\"_blank\">Video CdH</a></li>\r\n                                <li><a href={arcana.link_youtube_lupus + ``} target=\"_blank\">Video Lupus In Fabula</a></li>\r\n                                <li><a href={arcana.link_youtube_jornada_do_ser + ``} target=\"_blank\">Video Tarô Virtual</a></li>\r\n                                <li>Tarot Hermetico: {arcana.pages_tarot_hermetico} .pg</li>\r\n                                <li>Pagina do Tarot O Templo Vivente Frater Goya: {arcana.pages_tarot_crowley_goya} .pg</li>\r\n                                <li>Pagina do TARÔ DE CROWLEY - PALAVRAS-CHAVE: {arcana.pages_tarot_crowley_word_key} .pg</li>\r\n                            </ul>\r\n\r\n                        </Col>\r\n                        <Col className='m-3' sm={12} md={12} lg={12}>\r\n                            <h2>Síntese</h2>\r\n                            <p className='m-3'>{arcana.synthesis}</p>\r\n                        </Col>\r\n\r\n                        {\r\n                            (arcana.interpretation != undefined && arcana.interpretation != ``) ?\r\n                                <Col className='m-3' sm={12} md={12} lg={12}>\r\n                                    <h2>Interpretação</h2>\r\n                                        <div className='m-3'>\r\n                                            <Markdown \r\n                                                components={{\r\n                                                    h3: ({ node, ...props }) => {\r\n                                                        let text = '';\r\n                                                        if (typeof props.children === 'string') {\r\n                                                            text = props.children;\r\n                                                        } else if (Array.isArray(props.children)) {\r\n                                                            // Procura por <strong> e pega o texto dentro dela\r\n                                                            const strongChild = React.Children.toArray(props.children).find(\r\n                                                                (child: any) => React.isValidElement(child) && child.type === 'strong'\r\n                                                            );\r\n                                                            if (\r\n                                                                React.isValidElement(strongChild) &&\r\n                                                                typeof strongChild === 'object' &&\r\n                                                                strongChild !== null &&\r\n                                                                'props' in strongChild &&\r\n                                                                (strongChild as { props?: { children?: React.ReactNode } }).props &&\r\n                                                                (strongChild as { props: { children?: React.ReactNode } }).props.children\r\n                                                            ) {\r\n                                                                const strongChildContent = (strongChild as { props: { children: React.ReactNode } }).props.children;\r\n                                                                text = strongChildContent !== undefined ? String(strongChildContent) : '';\r\n                                                            } else {\r\n                                                                text = React.Children.toArray(props.children).join('');\r\n                                                            }\r\n                                                        }\r\n                                                            console.log(`🚀 ~ index.tsx:163 ~ Major_arcana ~ text:`, text);\r\n                                                        const id = arcana.name.toString()\r\n                                                            .normalize('NFD')\r\n                                                            .replace(/[\\u0300-\\u036f]/g, '')\r\n                                                            .replace(/[^a-zA-Z0-9\\s-]/g, '')\r\n                                                            .trim()\r\n                                                            .replace(/\\s+/g, '-')\r\n                                                            .toLowerCase()+ `-` + text\r\n                                                            .toString()\r\n                                                            .normalize('NFD')\r\n                                                            .replace(/[\\u0300-\\u036f]/g, '')\r\n                                                            .replace(/[^a-zA-Z0-9\\s-]/g, '')\r\n                                                            .trim()\r\n                                                            .replace(/\\s+/g, '-')\r\n                                                            .toLowerCase();\r\n                                                        \r\n                                                        return <h3 {...props} id={id} />;\r\n                                                    },\r\n                                                    \r\n                                                }}\r\n                                            >\r\n                                            {content ?? ''\r\n                                            }\r\n                                            </Markdown>\r\n                                        </div>\r\n\r\n                                </Col>\r\n                                : ``\r\n                        }\r\n                    </Row>\r\n                </Card.Body>\r\n\r\n                <Card.Footer>\r\n                    <h3>Cartas</h3>\r\n                    <Row>\r\n                        <Col sm={12} md={12} lg={3}>\r\n                            <Image className='img-fluid' alt='arcano Rider Waite' src={`${process.env.PUBLIC_URL}/${arcana.image_rider_waite}`} />\r\n                            <p>arcano Rider Waite</p>\r\n                        </Col>\r\n                        <Col sm={12} md={12} lg={3}>\r\n                            <Image className='img-fluid' alt='arcano Marselli' src={`${process.env.PUBLIC_URL}/${arcana.image_marseille}`} />\r\n                            <p>arcano Marselli</p>\r\n                        </Col>\r\n                        <Col sm={12} md={12} lg={3}>\r\n                            <Image className='img-fluid' alt='arcano Crowley' src={`${process.env.PUBLIC_URL}/${arcana.image_crowley}`} />\r\n                            <p>arcano Crowley</p>\r\n                        </Col>\r\n                        <Col sm={12} md={12} lg={3}>\r\n                            <Image className='img-fluid' alt='arcano CdH' src={`${process.env.PUBLIC_URL}/${arcana.image_cdh}`} />\r\n                            <p>arcano CdH </p>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Major_arcanas>\r\n    )\r\n                                                        \r\n}","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nimport { Divs } from './styles';\r\n\r\nimport Sephiroth from '../sephiroth'\r\nimport Major_arcana from '../major_arcana';\r\n\r\nexport default function Infos(props: any) {\r\n    const { sephira, path } = props;\r\n\r\n    if (path && path != '') {\r\n        return(\r\n            <Divs>\r\n                <Major_arcana arcana={path} />\r\n            </Divs>\r\n        )\r\n\r\n    } else if (sephira && sephira != '') {\r\n\r\n        return(\r\n            <Divs>\r\n                <Sephiroth sephira={sephira} />\r\n            </Divs>\r\n        )\r\n    } else {\r\n        \r\n        return (\r\n            <Divs>\r\n                <Card className=\"text-center\">\r\n                    <Card.Body>\r\n                        <Card.Text className='text-center p-5'>\r\n                            Este é um projeto de código aberto para o Grimorio, uma ferramenta para consulta de dados da kabbalah, tarot e astrologia. O projeto é mantido por <a href='https://www.linkedin.com/in/kevin-martins-010532119/'>Kevin Martins</a>  , caso queira contribuir, entre em contato. Lembrando que o projeto é gratuito e não possui fins lucrativos, portanto, não é permitido o uso comercial. O projeto é um trabalho em andamento e pode conter erros. Caso encontre algum erro, por favor, entre em contato para que possamos corrigir, porém nem todas as sugestões serão aceitas, por varios motivos. \r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Divs>\r\n        )\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\n\r\ninterface KabbalahProps {\r\n    onSephiraChange: (sephira: string) => void;\r\n    handlePathChange: (path: string) => void;\r\n}\r\n\r\nexport default function Kabbalah({ onSephiraChange, handlePathChange }: KabbalahProps) {\r\n\r\n\r\n    const groupSephiroth: Record<string, string> = {\r\n        malkut: \"malkuth\",\r\n        yesod: \"yesod\",\r\n        hod: \"hod\",\r\n        netzach: \"netzach\",\r\n        tipheret: \"tipheret\",\r\n        geburah: \"geburah\",\r\n        chesed: \"chesed\",\r\n        binah: \"binah\",\r\n        chokmah: \"chokmah\",\r\n        kether: \"kether\",\r\n        daath: \"daath\",\r\n    };\r\n\r\n    const groupPath: Record<string, string> = {\r\n        caminho_0: \"louco\",\r\n        caminho_1: \"mago\",\r\n        caminho_2: \"sacerdotisa\",\r\n        caminho_3: \"imperatriz\",\r\n        caminho_4: \"imperador\",\r\n        caminho_5: \"hierofante\",\r\n        caminho_6: \"enamorados\",\r\n        caminho_7: \"carro\",\r\n        caminho_8: \"forca\",\r\n        caminho_9: \"eremita\",\r\n        caminho_10: \"roda\",\r\n        caminho_11: \"justica\",\r\n        caminho_12: \"pendurado\",\r\n        caminho_13: \"morte\",\r\n        caminho_14: \"temperanca\",\r\n        caminho_15: \"diabo\",\r\n        caminho_16: \"torre\",\r\n        caminho_17: \"estrela\",\r\n        caminho_18: \"lua\",\r\n        caminho_19: \"sol\",\r\n        caminho_20: \"julgamento\",\r\n        caminho_21: \"mundo\",\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleGroupClick = (event: MouseEvent) => {\r\n            const target = event.target as SVGElement;\r\n            const groupId = target.id;\r\n            if (!groupId) return;\r\n\r\n            let newSephira = groupSephiroth[groupId];\r\n            if (!newSephira) {\r\n                for (const [key, value] of Object.entries(groupSephiroth)) {\r\n                    const suffix = key;\r\n                    if (suffix && groupId.endsWith(`${suffix}`)) {\r\n                        newSephira = value;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (newSephira) {\r\n                handlePathChange('');\r\n                onSephiraChange(newSephira);\r\n            }\r\n\r\n            let newPath = groupPath[groupId];\r\n            if (!newPath) {\r\n                for (const [key, value] of Object.entries(groupPath)) {\r\n                    const suffix = key;\r\n                    if (suffix && groupId.endsWith(`${suffix}`)) {\r\n                        newPath = value;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (newPath) {\r\n                onSephiraChange('');\r\n                handlePathChange(newPath);\r\n            }\r\n        };\r\n\r\n        // Se o SVG carregado internamente pelo object permitir, você pode buscar seu conteúdo\r\n        const objectElement = document.getElementById('kabbalah-svg-object');\r\n        objectElement?.addEventListener('load', () => {\r\n            const svgDoc = (objectElement as HTMLObjectElement).contentDocument;\r\n            if (svgDoc) {\r\n                svgDoc.addEventListener('click', handleGroupClick);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            const objectEl = document.getElementById('kabbalah-svg-object');\r\n            const svgDoc = (objectEl as HTMLObjectElement)?.contentDocument;\r\n            svgDoc?.removeEventListener('click', handleGroupClick);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <object\r\n            id=\"kabbalah-svg-object\"\r\n            data={`${process.env.PUBLIC_URL}/assets/images/kabbalah.svg`}\r\n            type=\"image/svg+xml\" \r\n            width=\"100%\"\r\n            height=\"100%\"\r\n        >\r\n            Seu navegador não suporta SVG\r\n        </object>\r\n    );\r\n}","import React from 'react';\r\nimport { Card, Col, Container, Row } from 'react-bootstrap';\r\n\r\nimport { Divs } from './styles';\r\n\r\nimport Infos from '../../components/infos';\r\nimport Kabbalah from '../../components/kabbalah';\r\nimport Header from '../header';\r\n\r\nexport default function Home() {\r\n    const [sephira, setSephira] = React.useState('');\r\n    const [path, setPath] = React.useState('');\r\n\r\n    const handleSephiraChange = (newSephira: string) => {\r\n        setSephira(newSephira);\r\n    };\r\n\r\n    const handlePathChange = (newPath: string) => {\r\n        setPath(newPath);\r\n    };\r\n\r\n    return (\r\n        <Divs>\r\n            <Header />\r\n            <main>\r\n                <Container fluid=\"md\" className='pt-5'>\r\n                    <Row>\r\n                        {/* <Col className='pb-3' sm={12} md={12} lg={12}>\r\n                     <Form_infos />\r\n                  </Col> */}\r\n\r\n                        <Col sm={12} md={12} lg={3} className='pb-3'>\r\n                            <aside>\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <Kabbalah onSephiraChange={handleSephiraChange} handlePathChange={handlePathChange} />\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </aside>\r\n                        </Col>\r\n\r\n                        <Col sm={12} md={12} lg={9} className='pb-3'>\r\n                            <section>\r\n                                <Infos sephira={sephira} path={path} />\r\n                            </section>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </main>\r\n        </Divs>\r\n    );\r\n}\r\n"],"names":["Headers","styled","div","key","state","setState","useState","storageValue","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","Header","props","_props$term","term","setTerm","user","setUser","usePeristedState","_jsx","children","Navbar","collapseOnSelect","expand","bg","variant","_jsxs","Container","Brand","as","Link","to","Image","alt","src","width","height","className","Toggle","Collapse","id","Nav","Form","Control","type","placeholder","Button","data","_process$env$REACT_AP","base_url","process","window","location","origin","getAngels","axios","get","headers","getCaractere_hebraico","getOdus","getSephiroth","getTarot","getTarot_Arcana_Major","getTarot_Arcana_Minor","getSigns","getPlanet","getMarkdown","link","getReferences","Divs","Sephiras","Minor_arcanas","Caractere_hebraicos","Caractere_hebraico","_caractere$name","caractere","setCaractere","undefined","async","then","result","full_caractere","catch","error","console","log","Get_caractere","Card","caractere_hebraico","name","Body","significance","value","caractere_romane","planeta","correspondence","positive_polarity","negative_polarity","kabbalah_hermetica","exercise","Minor_arcana","_arcana$name","arcana","setArcana","full_arcana","finally","Get_arcanas","Row","Col","sm","md","lg","caractere_hebraico_link","elemento","word_key","dados","Array","isArray","length","map","style","fontSize","display","arquetipo_MBTI","name_angel","angel","href","target","astrologica","sephiroth","reino","link_wiki_mdd","link_youtube_jornada_do_ser","pages_tarot_hermetico","pages_tarot_crowley_goya","pages_tarot_crowley_word_key","Footer","image_rider_waite","image_crowley","Sephiroth","sephira","setSephira","full_sephiroth","Get_sephiroth","simbolo","pages_kabbalah_hermetica","carruagem","mundo","mundo_traducao","casta_hebraica","angel_hebraica","vogal_hebraico","tetragrama_vogais","energia","dedos","link_youtube_cdh","link_youtube_yair","minor_arcana","Accordion","index","Item","eventKey","Major_arcanas","Major_arcana","content","setContent","interpretation","res","runa","signo","backgroundColor","color","link_youtube_lupus","synthesis","Markdown","components","h3","_ref","node","text","strongChild","React","toArray","find","child","strongChildContent","String","join","toString","normalize","replace","trim","toLowerCase","image_marseille","image_cdh","Infos","path","Text","Kabbalah","onSephiraChange","handlePathChange","groupSephiroth","malkut","yesod","hod","netzach","tipheret","geburah","chesed","binah","chokmah","kether","daath","groupPath","caminho_0","caminho_1","caminho_2","caminho_3","caminho_4","caminho_5","caminho_6","caminho_7","caminho_8","caminho_9","caminho_10","caminho_11","caminho_12","caminho_13","caminho_14","caminho_15","caminho_16","caminho_17","caminho_18","caminho_19","caminho_20","caminho_21","handleGroupClick","event","groupId","newSephira","Object","entries","suffix","endsWith","newPath","objectElement","document","getElementById","addEventListener","svgDoc","contentDocument","objectEl","removeEventListener","Home","setPath","fluid"],"sourceRoot":""}